<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * (c) Copyright 2001-2013 Yann-Gaël Guéhéneuc,
 * University of Montréal and École Polytechnique de Montréal
 * 
 * Use and copying of this software and preparation of derivative works
 * based upon this software are permitted. Any copy of this software or
 * of any derivative work must include the above copyright notice of
 * the author, this paragraph, the one after it, and the comments below.
 * 
 * This software is made available AS IS, and THE AUTHOR DISCLAIMS
 * ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, AND NOT WITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN,
 * ANY LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
 * EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
 * NEGLIGENCE) OR STRICT LIABILITY, EVEN IF THE AUTHOR IS ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES.
 * 
 * All Rights Reserved.
-->

<!--
Claim:
	We do not claim that this list is complete with respect to a given program.
	Should you happen to know a micro-architecture not listed here,
	please contact Yann-Gaël Guéhéneuc (yann-gael.gueheneuc@polymtl.ca).
	The source code of the studied programs is available upon request.

Contributors:
	- Yann-Gaël Guéhéneuc ;
	- Sultan Alhusain;
	- Sébastien Boisclair, Vinh Thinh Le, and Joseph Vong;
	- Khashayar Khosravi;
	- Janice Ka-Yee Ng, Duc Loc Huynh, and Nawfal Chraibi;
	- Saliha Bouden, Jean-Yves Guyomarc'h, and Taleb Ikbal;
	- James Bieman, Greg Straw, Huxia Wang, P. Willard Munger, and Roger T. Alexander.
	  See "Design Patterns and Change Proneness: An Examination of Five Evolving Systems",
	  in the proceedings of the ninth International Software Metrics Symposium (Metrics 2003),
	  pp. 40-49, 2003. (http://csdl.computer.org/comp/proceedings/metrics/2003/1987/00/19870040abs.htm).

Version 1.0, 04/10/19
	Original version, with 138 microarchitectures from 11 Java programs
Version 1.1, 05/07/07
	Second version,  with XXX microarchitectures from 16 Java programs
Version 1.2, 13/04/21
	Fixes and comments contributed by Sultan Alhusain
-->

<!--
 * The roleKind for a role might be:
 * - Class
 * - AbstractClass
 * - Any
 * As defined in the notation from the
 * Design Patterns book.
-->
<designPatterns>
	<program type="Java">
		<name>1 - QuickUML 2001</name>
		<designPattern name="Abstract Factory">
			<microArchitectures>
				<microArchitecture number="1">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>diagram.DefaultFigureEditor</entity></client>
							<client roleKind="AbstractClass"><entity>diagram.DiagramUI</entity></client>
						</clients>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>diagram.FigureRenderer</entity></abstractProduct>
						</abstractProducts>
						<products>
							<!--  <product roleKind="Class"><entity>diagram.DefaultFigureRenderer</entity></product> -->
							<product roleKind="Class"><entity>uml.diagram.ClassRenderer</entity></product>
							<!--  <product roleKind="Class"><entity>diagram.DefaultLinkRenderer</entity></product> -->
							<product roleKind="Class"><entity>uml.diagram.AssociationLinkRenderer</entity></product>
							<product roleKind="Class"><entity>uml.diagram.CompositionLinkRenderer</entity></product>
							<product roleKind="Class"><entity>uml.diagram.DependencyLinkRenderer</entity></product>
							<product roleKind="Class"><entity>uml.diagram.GeneralizationLinkRenderer</entity></product>
							<product roleKind="Class"><entity>uml.diagram.RealizationLinkRenderer</entity></product>
							<product roleKind="Class"><entity>uml.diagram.InterfaceRenderer</entity></product>
							<product roleKind="Class"><entity>uml.diagram.NoteRenderer</entity></product>
							<!--  <product roleKind="Class"><entity>diagram.DefaultLabelRenderer</entity></product> -->
							<!--  <product roleKind="Class"><entity>uml.diagram.SinkLabelRenderer</entity></product> -->
							<!--  <product roleKind="Class"><entity>diagram.LinkLabel</entity></product> -->
						</products>
					</roles>
					<comment>
The diagram.Diagram class only somewhat plays the role of Concrete Factory.
First, there is no Abstract Factory, second there is one Concrete Factory only,
third the Concrete Factory provides Concrete Product through a unique
FigureRenderer.getFigureRenderer(Class itemClass) method (using a Map).
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Builder">
			<microArchitectures>
				<microArchitecture number="2">
					<roles>
						<directors>
							<director roleKind="Class"><entity>uml.ui.BuildAction</entity></director>
						</directors>
						<builders>
							<builder roleKind="AbstractClass"><entity>uml.builder.CodeBuilder</entity></builder>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class"><entity>uml.builder.AssociationBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>uml.builder.ClassBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>uml.builder.CompositionBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>uml.builder.InheritanceBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>uml.builder.CPlusPlusBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>uml.builder.JavaBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>uml.builder.RealizationBuilder</entity></concreteBuilder>
						</concreteBuilders>
						<products>
							<product roleKind="Class"><entity>uml.builder.MetaAssociation</entity></product>
							<product roleKind="Class"><entity>uml.builder.MetaClass</entity></product>
							<product roleKind="Class"><entity>uml.builder.MetaComposition</entity></product>
							<product roleKind="Class"><entity>uml.builder.MetaAssociation</entity></product>
						</products>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Command">
			<microArchitectures>
				<microArchitecture number="3">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>uml.ui.DiagramContainer</entity></client>
						</clients>
						<invokers>
							<invoker roleKind="Class"><entity>javax.swing.JMenuItem</entity></invoker>
						</invokers>
						<commands>
						</commands>
						<concreteCommands>
							<concreteCommand roleKind="Class"><entity>uml.ui.ExportAction</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>uml.ui.DiagramContainer.ExportGIFAction</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>uml.ui.DiagramContainer.OpenAction</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>uml.ui.DiagramContainer.SaveAction</entity></concreteCommand>
						</concreteCommands>
						<receivers>
						</receivers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Composite">
			<microArchitectures>
				<microArchitecture number="4">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>uml.ui.ToolPalette</entity></client>
						</clients>
						<components>
							<component roleKind="AbstractClass"><entity>diagram.tool.Tool</entity></component>
						</components>
						<composites>
							<composite roleKind="Class"><entity>diagram.tool.CompositeTool</entity></composite>
						</composites>
						<leaves>
							<!-- <leaf roleKind="Class"><entity>diagram.tool.CompositeTool</entity></leaf> -->
							<!-- <leaf roleKind="Class"><entity>diagram.tool.AbstractTool</entity></leaf> -->
							<leaf roleKind="Class"><entity>uml.ui.CardinalityTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.ClipboardTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.EditingTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.FigureDraggingTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.FigureShappingTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.FigureTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.LinkShappingTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.LinkTool</entity></leaf>
							<leaf roleKind="Class"><entity>uml.ui.AssociationTool</entity></leaf>
							<leaf roleKind="Class"><entity>uml.ui.CompositionTool</entity></leaf>
							<leaf roleKind="Class"><entity>uml.ui.DependencyTool</entity></leaf>
							<leaf roleKind="Class"><entity>uml.ui.GeneralizationTool</entity></leaf>
							<leaf roleKind="Class"><entity>uml.ui.RealizationTool</entity></leaf>
							<leaf roleKind="Class"><entity>diagram.tool.SelectionTool</entity></leaf>
						</leaves>
					</roles>
				</microArchitecture>
				<!-- 
				<microArchitecture number="5">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>diagram.Diagram</entity></client>
							<client roleKind="AbstractClass"><entity>diagram.DiagramUI</entity></client>
						</clients>
						<components>
							<component roleKind="AbstractClass"><entity>diagram.DefaultFigureEditor</entity></component>
						</components>
						<composites>
							<composite roleKind="Class"><entity>diagram.DefaultLinkEditor</entity></composite>
						</composites>
						<leaves>
							<leaf roleKind="Class"><entity>uml.diagram.ClassEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.AssociationLinkEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.CompositionLinkEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.DependencyLinkEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.GeneralizationLinkEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.RealizationLinkEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.InterfaceEditor</entity></leaf>
							<leaf roleKind="Class"><entity>uml.diagram.NoteEditor</entity></leaf>
						</leaves>
					</roles>
					<comment>
As rightly pointed out by Sultan Alhusain: 
"The composite does not actually call any methods defined by the
Component. Although component and composite do have a method with
similar name (getDecoratedBounds), all method invocations in the
composite class are defined and performed by the DefaultLabelRenderer
class, which also have a method named (getDecoratedBounds). The
DefaultLabelRenderer class extends JTextField and does not implement
or inherit neither the Component OR Composite classes."
(Personal e-mail from p08000620@myemail.dmu.ac.uk on 13/01/19.)
Therefore, this microarchitecture is removed from P-MARt. 				
					</comment>
				</microArchitecture>
				-->
			</microArchitectures>
		</designPattern>
		<designPattern name="Observer">
			<microArchitectures>
				<microArchitecture number="6">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>diagram.tool.AbstractTool</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>uml.ui.CardinalityTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.ClipboardTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.EditingTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.FigureDraggingTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.FigureShappingTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.FigureTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.LinkShappingTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.LinkTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>uml.ui.AssociationTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>uml.ui.CompositionTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>uml.ui.DependencyTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>uml.ui.GeneralizationTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>uml.ui.RealizationTool</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>diagram.tool.SelectionTool</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>diagram.tool.ToolListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>uml.ui.ToolPalette</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="7">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>uml.ui.IconManager</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>

	<program type="Java">
		<name>2 - Lexi v0.1.1 alpha</name>
		<designPattern name="Builder">
			<microArchitectures>
				<microArchitecture number="8">
					<roles>
						<directors>
							<director roleKind="Class"><entity>com.jmonkey.office.lexi.Main.DocumentFrame</entity></director>
						</directors>
						<builders>
							<builder roleKind="AbstractClass"><entity>com.jmonkey.office.lexi.support.Editor</entity></builder>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.HTMLEditor</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.RTFEditor</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.TEXTEditor</entity></concreteBuilder>
						</concreteBuilders>
						<products>
						</products>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Observer">
			<microArchitectures>
				<microArchitecture number="9">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>com.jmonkey.office.lexi.support.Editor</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.HTMLEditor</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>java.awt.event.FocusListener</entity></observer>
							<observer roleKind="AbstractClass"><entity>java.beans.VetoableChangeListener</entity></observer>
							<observer roleKind="AbstractClass"><entity>javax.swing.event.ChangeListener</entity></observer>
							<observer roleKind="AbstractClass"><entity>javax.swing.event.DocumentListener</entity></observer>
							<observer roleKind="AbstractClass"><entity>javax.swing.event.HyperlinkListener</entity></observer>
							<observer roleKind="AbstractClass"><entity>javax.swing.event.UndoableEditListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.HTMLEditor.E</entity></concreteObserver>
						</concreteObservers>
					</roles>
					<comment>
From Sultan Alhusain on 13/01/19:
"The concreteSubject here holds what can be described as a singleton
set of listeners contained in the nested class E. For me, the
concreteSubject is simply implementing listeners that are provided by
a library. So, it is not actually a Publish-Subscribe relationship
where observers attach/detach themselves."
From Yann-Gaël Guéhéneuc on 13/04/21
"Yes, I actually remember that one! We had a discussion with the 
students about whether or not it qualify of Observer. Indeed, you are 
correct that there is no "attach" / "detach" but simply a lazy 
instantiation. I think the argument in favour was that class E still 
implemented lots of Listener interfaces."
Therefore, this microarchitecture is kept but should be used with caution.					
					</comment>
				</microArchitecture>
				<microArchitecture number="10">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>com.jmonkey.office.lexi.support.Editor</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.HTMLEditor</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>java.awt.event.MouseListener</entity></observer>
							<observer roleKind="AbstractClass"><entity>java.awt.event.KeyListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>com.jmonkey.office.lexi.support.editors.HTMLEditor</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="11">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>com.jmonkey.export.Registry</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
				<microArchitecture number="12">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>com.jmonkey.office.lexi.support.EditorActionManager</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>

	<program type="Java">
		<name>3 - JRefactory v2.6.24</name>
		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="13">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.awt.OrderableList</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.awt.MoveItemAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.awt.OrderableListModel</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="14">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.cafe.CafeSetup</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.cafe.ReloadActionAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.ide.common.MultipleDirClassDiagramReloader</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="15">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.command.CommandLineMenu</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.command.ZoomAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.line.LinedPanel</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="16">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.common.ClassListPanel</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.MouseAdapter</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.common.JumpToTypeAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.UMLPackage</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="17">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLPopupMenu</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.common.SourceBrowserAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.ide.common.SourceBrowser</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="18">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.command.CommandLineMenu</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.elixir.UndoMenuItem</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.common.UndoAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.refactor.undo.UndoAction</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="19">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.jbuilder.UMLNode</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.acm.seguin.ide.jbuilder.BrowserAdapter</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.NewProjectAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.ide.common.MultipleDirClassDiagramReloader</entity></adaptee>
						</adaptees>
					</roles>
					<comment>
BrowserAdapter is a class providing an empty implementation of interface com.borland.primetime.ide.BrowserListener.
					</comment>
				</microArchitecture>
				<microArchitecture number="20">
					<roles>
						<clients>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.acm.seguin.ide.jbuilder.BrowserAdapter</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.RefactoringAdapter</entity></adapter>
						</adapters>
						<adaptees>
						</adaptees>
					</roles>
					<comment>
BrowserAdapter is a class providing an empty implementation of interface com.borland.primetime.ide.BrowserListener.
					</comment>
				</microArchitecture>
				<microArchitecture number="21">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLPopupMenu</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.ConvertAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.UMLField</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.UMLType</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="22">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.line.SizableLabel</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLField</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLMethod</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLNestedType</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLType</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.MouseAdapter</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.UMLMouseAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>javaw.swing.JPopupMenu</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="23">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.jbuilder.JPGFileAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.command.CommandLineMenu</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.jpg.SaveAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.jpg.Save</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="24">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.jbuilder.UMLNode</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.acm.seguin.ide.jbuilder.JBuilderAction</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.JPGFileAction</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.jpg.SaveAdapter</entity></adaptee>
						</adaptees>
					</roles>
					<comment>
JBuilderAction is an abstract class implementing interface ???.UpdateAction.
					</comment>
				</microArchitecture>
				<microArchitecture number="25">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.line.SizableLabel</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLField</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLLine</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLMethod</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLNestedType</entity></client>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLType</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.MouseListener</entity></target>
							<target roleKind="AbstractClass"><entity>java.awt.event.MouseMotionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.line.DragPanelAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.line.EndPointPanel</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.line.LinedPanel</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="26">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.uml.UMLPackage</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.MouseListener</entity></target>
							<target roleKind="AbstractClass"><entity>java.awt.event.MouseMotionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.line.LineMouseAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.line.LinedPanel</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="27">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.command.CommandLineMenu</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.print.PrintAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.print.PrintingThread</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="28">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.acm.seguin.ide.command.CommandLineMenu</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.print.PrintSetupAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.print.UMLPagePrinter</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="29">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>javax.swing.JTextField</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>java.awt.event.ActionListener</entity></target>
							<target roleKind="AbstractClass"><entity>javax.swing.event.DocumentListener</entity></target>
							<target roleKind="AbstractClass"><entity>java.awt.event.FocusListener</entity></target>
							<target roleKind="AbstractClass"><entity>javax.swing.event.ListDataListener</entity></target>
							<target roleKind="AbstractClass"><entity>javax.swing.event.ListSelectionListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.acm.seguin.uml.refactor.SignatureUpdateAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.acm.seguin.uml.refactor.ExtractMethodDialog</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Builder">
			<microArchitectures>
				<microArchitecture number="30">
					<roles>
						<directors>
							<director roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.UMLNode</entity></director>
						</directors>
						<builders>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.refactor.MenuBuilder</entity></concreteBuilder>
						</concreteBuilders>
						<products>
							<product roleKind="Class"><entity>???.ActionGroup</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="31">
					<roles>
						<directors>
							<director roleKind="Class"><entity>org.acm.seguin.refactor.method.ExtractMethodRefactoring</entity></director>
						</directors>
						<builders>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class"><entity>org.acm.seguin.refactor.method.EMBuilder</entity></concreteBuilder>
						</concreteBuilders>
						<products>
							<product roleKind="Class"><entity>org.acm.seguin.parser.Node</entity></product>
						</products>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Factory Method">
			<microArchitectures>
				<microArchitecture number="32">
					<roles>
						<products>
							<product roleKind="AbstractClass"><entity>com.borland.primetime.ide.NodeViewer</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.UMLNodeViewer</entity></concreteProduct>
						</concreteProducts>
						<creators>
							<creator roleKind="AbstractClass"><entity>com.borland.primetime.ide.NodeViewerFactory</entity></creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.UMLNodeViewerFactory</entity></concreteCreator>
						</concreteCreators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="33">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>org.acm.seguin.uml.loader.ReloaderSingleton</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
				<microArchitecture number="34">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>org.acm.seguin.ide.jbuilder.UMLNodeViewerFactory</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="State">
			<microArchitectures>
				<microArchitecture number="35">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>org.acm.seguin.print.xml.XMLLinePrinter</entity></context>
						</contexts>
						<states>
							<state roleKind="AbstractClass"><entity>org.acm.seguin.print.xml.State</entity></state>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>org.acm.seguin.print.xml.AttributeState</entity></concreteState>
							<concreteState roleKind="Class"><entity>org.acm.seguin.print.xml.AttributeValueState</entity></concreteState>
							<concreteState roleKind="Class"><entity>org.acm.seguin.print.xml.QuoteAttributeValueState</entity></concreteState>
							<concreteState roleKind="Class"><entity>org.acm.seguin.print.xml.TagState</entity></concreteState>
							<concreteState roleKind="Class"><entity>org.acm.seguin.print.xml.TextState</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
				<microArchitecture number="36">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>org.acm.seguin.summary.FileSummary</entity></context>
						</contexts>
						<states>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>org.acm.seguin.summary.SummaryLoaderState</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Visitor">
			<microArchitectures>
				<microArchitecture number="37">
					<roles>
						<visitors>
							<visitor roleKind="AbstractClass"><entity>org.acm.seguin.parser.JavaParserVisitor</entity></visitor>
						</visitors>
						<concreteVisitors>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.parser.ChildrenVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.parser.ChildrenVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.field.AddFieldVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.type.AddImplementedInterfaceVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.AddMethodVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.FindLocalVariableDeclVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.IdentifyMethodVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.ChangeMethodScopeVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.RemoveMethodVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.RenameParameterVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.MoveMethodVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.field.RemoveFieldVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.field.RemoveFieldVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.type.RenameParentVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.type.RenameTypeVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.tools.international.StringListVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.parser.query.CompareParseTreeVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.parser.query.EqualTree</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.summary.LineCountVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.summary.SummaryLoadVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.pretty.PrettyPrintVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.pretty.SpecialTokenVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.tools.stub.StubPrintVisitor</entity></concreteVisitor>
						</concreteVisitors>
						<elements>
							<element roleKind="AbstractClass"><entity>org.acm.seguin.parser.Node</entity></element>
						</elements>
						<concreteElements>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.SimpleNode</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTAdditiveExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTAllocationExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTAndExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTArgumentList</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTArguments</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTArrayDimsAndInits</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTArrayInitializer</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTAssignmentOperator</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTBlock</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTBlockStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTBooleanLiteral</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTBreakStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTCastExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTCastLookahead</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTClassBody</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTClassBodyDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTClassDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTCompilationUnit</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTConditionalAndExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTConditionalExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTConditionalOrExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTConstructorDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTContinueStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTDoStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTEmptyStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTEqualityExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTExclusiveOrExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTExplicitConstructorInvocation</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTFieldDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTForInit</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTForStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTForUpdate</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTFormalParameter</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTFormalParameters</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTIfStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTImportDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTInclusiveOrExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTInitializer</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTInstanceOfExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTInterfaceBody</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTInterfaceDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTInterfaceMemberDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTLabeledStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTLiteral</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTLocalVariableDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTMethodDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTMethodDeclarationLookahead</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTMethodDeclarator</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTMultiplicativeExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTName</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTNameList</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTNestedClassDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTNestedInterfaceDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTNullLiteral</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPackageDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPostfixExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPreDecrementExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPreIncrementExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPrimaryExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPrimaryPrefix</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPrimarySuffix</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTPrimitiveType</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTRelationalExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTResultType</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTReturnStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTShiftExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTStatementExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTStatementExpressionList</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTSwitchLabel</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTSwitchStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTSynchronizedStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTThrowStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTTryStatement</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTType</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTTypeDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTUnaryExpression</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTUnaryExpressionNotPlusMinus</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTUnmodifiedClassDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTUnmodifiedInterfaceDeclaration</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTVariableDeclarator</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTVariableDeclaratorId</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTVariableInitializer</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.parser.ast.ASTWhileStatement</entity></concreteElement>
						</concreteElements>
					</roles>
				</microArchitecture>
				<microArchitecture number="38">
					<roles>
						<visitors>
							<visitor roleKind="AbstractClass"><entity>org.acm.seguin.summary.SummaryVisitor</entity></visitor>
						</visitors>
						<concreteVisitors>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.metrics.GatherData</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.summary.TraversalVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.AddMethodTypeVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.summary.query.ChildClassSearcher</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.NearMissVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.summary.PrintVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.field.RemoveFieldFromSubclassVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.method.RemoveMethodFromSubclassVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.field.RenameSystemTraversal</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.EliminatePackageImportVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.type.MoveClassVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.type.RenameClassVisitor</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.acm.seguin.refactor.type.RemoveClassVisitor</entity></concreteVisitor>
						</concreteVisitors>
						<elements>
							<element roleKind="AbstractClass"><entity>org.acm.seguin.summary.Summary</entity></element>
						</elements>
						<concreteElements>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.FieldAccessSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.FileSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.ImportSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.MessageSendSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.MethodSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.PackageSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.TypeDeclSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.TypeSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.VariableSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.FieldSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.LocalVariableSummary</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.acm.seguin.summary.ParameterSummary</entity></concreteElement>
						</concreteElements>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>

	<program type="Java">
		<name>4 - Netbeans v1.0.x</name>
		<designPattern name="Abstract Factory">
			<microArchitectures>
				<microArchitecture number="39">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.beans.EventSetPatternNode</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.clazz.ClassDataObject</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.java.JavaDataObject</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.beans.BeansModule</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.javadoc.JavadocModule</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.rmi.RMIModule</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>org.openide.nodes.ElementNodeFactory</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.openide.src.nodes.DefaultFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.clazz.ClassElementNodeFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.java.JavaElementNodeFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.openide.src.nodes.FilterFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.javadoc.comments.JavaDocPropertySupportFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.beans.PatternsBrowserFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.beans.PatternsExplorerFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.openide.nodes.Node</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.openide.nodes.AbstractNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.ElementNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.MemberElementNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.ClassElementNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.ConstructorElementNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.FieldElementNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.InitializerElementNode</entity></product>
							<product roleKind="Class"><entity>org.openide.src.nodes.MethodElementNode</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="40">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.ConnectionNodeInfo</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.actions.TestDriverAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.nodes.RootNode</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>org.netbeans.lib.ddl.DatabaseSpecificationFactory</entity></abstractFactory>
							<abstractFactory roleKind="AbstractClass"><entity>org.netbeans.lib.ddl.DriverSpecificationFactory</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.lib.ddl.impl.SpecificationFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.lib.ddl.DatabaseSpecification</entity></abstractProduct>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.lib.ddl.impl.DriverSpecification</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.Specification</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.DriverSpecification</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="41">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DefaultSettings</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.SyntaxSupport</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ext.JavaSyntaxSupport</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.Formatter</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.Abbrev</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseDocument</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ext.ExtSettings</entity></client>
						</clients>
						<abstractFactories>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.editor.AcceptorFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.editor.Acceptor</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.editor.Acceptor</entity></product>
						</products>
					</roles>
					<comment>
The AcceptorFactory behaves as a repository of specific instances of interface
Acceptor rather than as an abstract factory (in particular, it plays both the
role of abstract and concrete factory).
					</comment>
				</microArchitecture>
				<microArchitecture number="42">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseDocument</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseCaret</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.GuardedDocument</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.FindSupport</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ExtUI</entity></client>
						</clients>
						<abstractFactories>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayer</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.BookmarkLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.CaretLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.ColorLineLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.GuardedLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.HighlightSearchLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.IncSearchLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.StyleLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.SyntaxLayer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.DrawLayerFactory.WordColoringLayer</entity></product>
						</products>
					</roles>
					<comment>
The DrawLayerFactory behaves as a repository of instances of implementations of
the DrawLayer interface rather than as an abstract factory (in particular, it
plays both the role of abstract and concrete factory).
					</comment>
				</microArchitecture>
				<microArchitecture number="43">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DocOp</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ext.BaseFormatter</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ext.JavaSyntaxSupport</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ActionFactory.SelectNextParameterAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.FindSupport.DefaultFinderCreator</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.Utilities</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseDocument</entity></client>
						</clients>
						<abstractFactories>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.editor.FinderFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.editor.Finder</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.AcceptorBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.AcceptorFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.BOLBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.CharArrayBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.CharBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.CharFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.FalseBlocksFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.FalseFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.NextWordFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.NonWhiteBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.NonWhiteFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.PosVisColFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.PreviousWordBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.StringBlocksFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.StringBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.StringFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.TrueFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.VisColPosFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WhiteBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WhiteFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WholeWordsBlocksFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WholeWordsBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WholeWordsFwdFinder</entity></product>
						</products>
					</roles>
					<comment>
The FinderFactory behaves as a repository of instances of implementations of the
Finder interface rather than as an abstract factory (in particular, it plays
both the role of abstract and concrete factory).
					</comment>
				</microArchitecture>
				<microArchitecture number="44">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.vcs.advanced.CommandLineVcsFileSystem</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.vcs.cmdline.CvsFileSystem</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.vcs.VcsFileSystem</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>vcscore.org.netbeans.modules.vcscore.VcsFactory</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.vcs.advanced.CommandLineVcsFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.vcs.cmdline.CvsFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.modules.vcs.VcsAction</entity></abstractProduct>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.modules.vcs.VcsAdvancedCustomizer</entity></abstractProduct>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.modules.vcs.VcsDirReader</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.modules.vcs.advanced.CommandLineAction</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.vcs.advanced.CommandLineVcsAdvancedCustomizer</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.vcs.cmdline.CommandLineVcsDirReader</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.vcs.cmdline.CommandLineVcsDirReaderRecursive</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.vcs.cmdline.CvsAction</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="45">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.MarkChain</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseCaret</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DocOp</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.MarkBlockChain</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.Drawer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.EditorDebug</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseDocument.LineRootElement</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseDocument</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ext.ExtCaret</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.Analyzer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.BaseDocument.LineElement</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.Drawer.DrawMarkRenderer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DocOp.SyntaxUpdateRenderer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.CaretLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.ColorLineLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.GuardedLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.HighlightSearchLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.IncSearchLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.StyleLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.SyntaxLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DrawLayerFactory.WordColoringLayer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.ext.ExtCaret.HighlightBracketLayer</entity></client>
						</clients>
						<abstractFactories>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.editor.MarkFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.editor.Mark</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.editor.MarkFactory.ChainDrawMark</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.MarkFactory.ContextMark</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.MarkFactory.DrawMark</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.MarkFactory.SyntaxMark</entity></product>
						</products>
					</roles>
					<comment>
The MarkFactory behaves as a repository of instances of implementations of the
Mark interface rather than as an abstract factory (in particular, it plays both
the role of abstract and concrete factory).
					</comment>
				</microArchitecture>
				<microArchitecture number="46">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.filesystems.Repository</entity></client>
						</clients>
						<abstractFactories>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.openide.execution.NbfsStreamHandlerFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>java.net.URLStreamHandler</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.openide.execution.NbfsURLStreamHandler</entity></product>
						</products>
					</roles>
					<comment>
These classes implement only partially the Abstract Factory design pattern
because there is no abstract factory and (thus) one and only one concrete factory
					</comment>
				</microArchitecture>
				<microArchitecture number="47">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.java.ParseObjectRequest</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.java.V8ParseRequest</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>org.netbeans.modules.java.ElementFactory</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.java.V8ParseRequest</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.modules.java.ElementFactory.Item</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.modules.java.ClassElementImpl</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.java.ConstructorElementImpl</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.java.FieldElementImpl</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.java.InitializerElementImpl</entity></product>
							<product roleKind="Class"><entity>org.netbeans.modules.java.MethodElementImpl</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="48">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.dlg.AddTableColumnDialog</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.nodes.TableNode.ColumnPasteType</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.ColumnNodeInfo</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.TableNodeInfo</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.ViewNodeInfo</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.dlg.CreateTableDialog</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.nodes.IndexNode.IndexPasteType</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.actions.AddIndexAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.actions.AddToIndexAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.actions.GrabTableAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.actions.CreateViewAction</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.IndexNodeInfo</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.ProcedureListNodeInfo</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.nodes.ColumnNode</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.nodes.TableNode</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.nodes.ViewNode</entity></client>
						</clients>
						<abstractFactories>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.lib.ddl.impl.Specification</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.lib.ddl.DDLCommand</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.AbstractCommand</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.ColumnCommand</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.ModifyColumn</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RemoveColumn</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RenameColumn</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.ColumnListCommand</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.AddColumn</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateIndex</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateTable</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CommentTable</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CommentView</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateProcedure</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateFunction</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateTrigger</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateView</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RenameTable</entity></product>
							<product roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RenameView</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="49">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.view.DialogSupport</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>org.netbeans.editor.view.DialogCreator</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.editor.view.DefaultDialogCreator</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>org.netbeans.modules.editor.NbDialogCreator</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>java.awt.Dialog</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>javax.swing.JDialog</entity></product>
						</products>
					</roles>
				</microArchitecture>
				<microArchitecture number="50">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.FindSupport</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>org.netbeans.editor.FindSupport.FinderCreator</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>org.netbeans.editor.FindSupport.DefaultFinderCreator</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>org.netbeans.editor.Finder</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.FalseBlocksFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.FalseFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WholeWordsBlocksFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.StringBlocksFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WholeWordsBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.WholeWordsFwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.StringBwdFinder</entity></product>
							<product roleKind="Class"><entity>org.netbeans.editor.FinderFactory.StringFwdFinder</entity></product>
						</products>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="51">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.form.FormManager2</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.netbeans.modules.form.FormListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.netbeans.modules.form.FormAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.form.compat2.layouts.GridBagControlCenter</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.form.compat2.layouts.GridBagCustomizer.GBContainerProxy</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.form.JavaCodeGenerator</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="52">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openidex.search.Scanner</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.search.SearchResultIntersection</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.openidex.search.ScannerListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.netbeans.modules.search.SearchTaskImpl.AcceptAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.search.SearchResultIntersection</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.openide.nodes.NodeAcceptor</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openidex.search.ScannerListener</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="53">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.filesystems.Repository</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener.Repository</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener.Factory</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener12</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener13</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.form.FormEditorModule</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.openide.filesystems.RepositoryListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.netbeans.core.ClassLoaderSupport</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.core.DataSystem</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.core.FSPoolNode</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.javadoc.search.JavaDocChildren</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.core.Packages</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.util.WeakListener.Repository</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.objectbrowser.TreeNode.RootChildren</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.vcs.VcsCache</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.openide.filesystems.FileObject</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.core.DataSystem.DSMap</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.filesystems.FileSystem</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.filesystems.RepositoryListener</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.vcs.VcsFileSystem</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="54">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.loaders.DataLoaderPool</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener.Factory</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener12</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener13</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.openide.loaders.OperationListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.openide.util.WeakListener.Operation</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.loaders.OperationAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.projects.Listener</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.core.NbMainExplorer.RepositoryTab</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.openide.loaders.OperationListener</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.util.RequestProcessor</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="55">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.explorer.propertysheet.BeansDetails</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.nodes.Node</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.form.palette.ComponentPalette</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener.Node</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener.Factory</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener12</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.util.WeakListener13</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.core.execution.ProcessNode</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.openide.nodes.NodeListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.netbeans.modules.projects.settings.GlobalOptionsChildren.ChildrenAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.nodes.FilterNode.ChildrenAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.core.ControlPanelNode.ControlPanelChildren</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.loaders.DataFolder.Listener</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.awt.MenuBar.MenuFolder</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.util.WeakListener.Node</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.nodes.FilterNode.NodeAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.loaders.DataShadow.PropL</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.nodes.NodeAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.explorer.propertysheet.PropertySheet.BeansListener</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.nodes.ChildrenArray</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.util.actions.CookieAction.CookiesChangeListener</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.explorer.ExplorerManager.Listener</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.windows.TopComponent.NodeName</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.util.actions.ProjectSensitiveAction.NodesL</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.form.palette.PaletteButton</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.explorer.view.VisualizerNode</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.projects.settings.GlobalOptionsChildren</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.nodes.FilterNode.Children</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.nodes.Children.Keys</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.nodes.Index.Support</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.nodes.NodeListener</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.nodes.FilterNode</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.explorer.propertysheet.PropertySheet</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.explorer.propertysheet.BeansDetails</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.util.actions.CookieAction</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.explorer.ExplorerManager</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.windows.TopComponent</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.util.actions.ProjectSensitiveAction</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.form.palette.PaletteButton</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.explorer.view.VisualizerEvent</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="56">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.debugger.support.nodes.ThreadNode</entity></client>
						</clients>
						<targets>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.netbeans.modules.debugger.support.nodes.ThreadNode.ThreadListener</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.debugger.support.nodes.ThreadNode</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.debugger.support.AbstractDebugger</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.debugger.support.AbstractThread</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="57">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.awt.SpinButton</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.openide.awt.SpinButtonListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.openide.awt.SpinButtonAdapter</entity></adapter>
						</adapters>
						<adaptees>
						</adaptees>
					</roles>
				</microArchitecture>
				<microArchitecture number="58">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.filesystems.AbstractFileObject.Invalid</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.filesystems.AbstractFolder</entity></client>
							<client roleKind="AbstractClass"><entity>org.openide.filesystems.FileObject</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>org.openide.filesystems.FileChangeListener</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>org.netbeans.core.ClassLoaderSupport</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.util.WeakListener.FileChange</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.filesystems.FileChangeAdapter</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.loaders.MultiDataObject.EntryL</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.modules.corba.IDLDataObject.FileListener</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.loaders.FolderList</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.loaders.XMLDataObject.InfoParser</entity></adapter>
							<adapter roleKind="Class"><entity>org.openide.filesystems.MultiFileObject</entity></adapter>
							<adapter roleKind="Class"><entity>org.netbeans.core.Packages</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.openide.filesystems.FileObject</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.filesystems.FileChangeListener</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.loaders.DataObject</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.netbeans.modules.corba.IDLDataObject</entity></adaptee>
							<adaptee roleKind="Class"><entity>org.openide.loaders.XMLDataObject</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Command">
			<microArchitectures>
				<microArchitecture number="59">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.lib.ddl.impl.Specification</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.modules.db.explorer.infos.ProcedureListNodeInfo</entity></client>
						</clients>
						<invokers>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.infos.ColumnNodeInfo</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.infos.IndexNodeInfo</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.infos.TableNodeInfo</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.infos.ViewNodeInfo</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.lib.ddl.util.CommandBuffer</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.nodes.IndexNode.IndexPasteType</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.nodes.TableNode.ColumnPasteType</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.actions.AddIndexAction</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.actions.AddToIndexAction</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.actions.CreateViewAction</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.actions.RecreateTableAction</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.nodes.ColumnNode</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.nodes.TableNode</entity></invoker>
							<invoker roleKind="Class"><entity>org.netbeans.modules.db.explorer.nodes.ViewNode</entity></invoker>
						</invokers>
						<commands>
							<command roleKind="AbstractClass"><entity>db.liborg.netbeans.lib.ddl.DDLCommand</entity></command>
						</commands>
						<concreteCommands>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.AbstractCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.ColumnCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.ModifyColumn</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RemoveColumn</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RenameColumn</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.ColumnListCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.AddColumn</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateIndex</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateTable</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CommentTable</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CommentView</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateProcedure</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateFunction</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateTrigger</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.CreateView</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RenameTable</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>org.netbeans.lib.ddl.impl.RenameView</entity></concreteCommand>
						</concreteCommands>
						<receivers>
							<receiver roleKind="Class"><entity>java.sql.Connection</entity></receiver>
						</receivers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Iterator">
			<microArchitectures>
				<microArchitecture number="60">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.WizardDescriptor</entity></client>
						</clients>
						<aggregates>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>org.openide.WizardDescriptor</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>org.openide.WizardDescriptor.Iterator</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>org.openide.WizardDescriptor.ArrayIterator</entity></concreteIterator>
						</concreteIterators>
					</roles>
					<comment>
This instance is only somewhat like an Iterator design pattern because there are no real aggregate and concrete aggregate.
					</comment>
				</microArchitecture>
				<microArchitecture number="61">
					<roles>
						<clients>
						</clients>
						<aggregates>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>char[]</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>java.text.CharacterIterator</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>org.netbeans.editor.ext.CharacterArrayIterator</entity></concreteIterator>
						</concreteIterators>
					</roles>
				</microArchitecture>
				<microArchitecture number="62">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.EditorDebug</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DocOp</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DocOp.SyntaxUpdateRenderer</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.EditorDebug</entity></client>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.SyntaxSupport</entity></client>
						</clients>
						<aggregates>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>char[]</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>java.text.CharacterIterator</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>org.netbeans.editor.SyntaxSeg.Slot</entity></concreteIterator>
						</concreteIterators>
					</roles>
				</microArchitecture>
				<microArchitecture number="63">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.netbeans.editor.DocOp</entity></client>
						</clients>
						<aggregates>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>org.netbeans.editor.SyntaxSeg.Slot</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>java.text.CharacterIterator</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>org.netbeans.editor.SyntaxSeg</entity></concreteIterator>
						</concreteIterators>
					</roles>
				</microArchitecture>
				<microArchitecture number="64">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>org.openide.text.DefaultPrintable</entity></client>
						</clients>
						<aggregates>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>org.openide.text.AttributedCharacters</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>java.text.CharacterIterator</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>org.openide.text.AttributedCharacters.AttributedCharacterIteratorImpl</entity></concreteIterator>
							<concreteIterator roleKind="Class"><entity>org.netbeans.modules.editor.PrintSupport.NbPrintContainer</entity></concreteIterator>
						</concreteIterators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Observer">
			<comment>
Many micro-architectures similar to the Adapter design pattern are also similar to the Observer design pattern.
			</comment>
		</designPattern>
	</program>

	<program type="Java">
		<name>5 - JUnit v3.7</name>
		<designPattern name="Composite">
			<microArchitectures>
				<microArchitecture number="65">
					<roles>
						<clients>
						</clients>
						<components>
							<component roleKind="AbstractClass"><entity>junit.framework.Test</entity></component>
						</components>
						<composites>
							<composite roleKind="Class"><entity>junit.framework.TestSuite</entity></composite>
							<composite roleKind="Class"><entity>junit.extensions.ActiveTestSuite</entity></composite>
						</composites>
						<leaves>
							<leaf roleKind="Class"><entity>junit.tests.TestImplementorTest.DoubleTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ActiveTestTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.AssertTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.extensions.ExceptionTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest.ThrowExceptionTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest.ThrowNoExceptionTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest.ThrowRuntimeExceptionTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExtensionTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.Failure</entity></leaf>
							<leaf roleKind="Class"><entity>junit.samples.money.MoneyTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.NoTestCases</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.NotPublicTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.NotVoidTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.OneTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.InheritedTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.OverrideTestCase</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.RepeatedTestTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.samples.SimpleTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.SorterTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.StackFilterTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.Success</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ActiveTestTest.SuccessTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.RepeatedTestTest.SuccessTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.SuiteTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.TestCaseClassLoaderTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.TestCaseTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.TestImplementorTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.TestListenerTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.TextRunnerTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExtensionTest.TornDown</entity></leaf>
							<leaf roleKind="Class"><entity>junit.samples.VectorTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.WasRun</entity></leaf>
							<leaf roleKind="Class"><entity>junit.extensions.TestDecorator</entity></leaf>
							<leaf roleKind="Class"><entity>junit.extensions.RepeatedTest</entity></leaf>
							<leaf roleKind="Class"><entity>junit.extensions.TestSetup</entity></leaf>
							<leaf roleKind="Class"><entity>junit.tests.ExtensionTest.TornDown</entity></leaf>
						</leaves>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Decorator">
			<microArchitectures>
				<microArchitecture number="66">
					<roles>
						<components>
							<component roleKind="AbstractClass"><entity>junit.framework.Test</entity></component>
						</components>
						<concreteComponents>
							<concreteComponent roleKind="Class"><entity>junit.tests.TestImplementorTest.DoubleTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ActiveTestTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.AssertTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.extensions.ExceptionTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest.ThrowExceptionTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest.ThrowNoExceptionTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest.ThrowRuntimeExceptionTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ExceptionTestCaseTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ExtensionTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.Failure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.samples.money.MoneyTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.NoTestCases</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.NotPublicTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.NotVoidTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.OneTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.InheritedTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.OverrideTestCase</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.RepeatedTestTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.samples.SimpleTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.SorterTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.StackFilterTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.Success</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ActiveTestTest.SuccessTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.RepeatedTestTest.SuccessTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.SuiteTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.TestCaseClassLoaderTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.TestCaseTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.TestImplementorTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.TestListenerTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.TextRunnerTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.ExtensionTest.TornDown</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.samples.VectorTest</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>junit.tests.WasRun</entity></concreteComponent>
						</concreteComponents>
						<decorators>
						</decorators>
						<concreteDecorators>
							<concreteDecorator roleKind="Class"><entity>junit.extensions.TestDecorator</entity></concreteDecorator>
							<concreteDecorator roleKind="Class"><entity>junit.extensions.RepeatedTest</entity></concreteDecorator>
							<concreteDecorator roleKind="Class"><entity>junit.extensions.TestSetup</entity></concreteDecorator>
							<concreteDecorator roleKind="Class"><entity>junit.tests.ExtensionTest.TornDown</entity></concreteDecorator>
						</concreteDecorators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Iterator">
			<microArchitectures>
				<microArchitecture number="67">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>junit.swingui.TestSelector</entity></client>
						</clients>
						<aggregates>
							<aggregate roleKind="AbstractClass"><entity>junit.runner.TestCollector</entity></aggregate>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>junit.runner.LoadingTestCollector</entity></concreteAggregate>
							<concreteAggregate roleKind="Class"><entity>junit.runner.SimpleTestCollector</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>java.util.Enumeration</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>java.util.Hashtable.Enumerator</entity></concreteIterator>
						</concreteIterators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Observer">
			<microArchitectures>
				<microArchitecture number="68">
					<roles>
						<subjects>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>junit.framework.TestResult</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>junit.framework.TestListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>junit.awtui.TestRunner</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>junit.ui.TestRunner</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>junit.swingui.TestRunner</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>junit.textui.TestRunner</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>junit.tests.TestListenerTest</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>junit.swingui.TestSuitePanel</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
				<microArchitecture number="69">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>java.awt.Component</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>junit.swingui.TestSelector</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>java.awt.event.MouseListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>junit.swingui.TestSelector.DoubleClickListener</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
				<microArchitecture number="70">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>java.awt.Component</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>junit.swingui.TestSelector</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>java.awt.event.KeyListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>junit.swingui.TestSelector.KeySelectListener</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="71">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>junit.framework.Assert</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
				<microArchitecture number="72">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>junit.runner.Version</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>

	<program type="Java">
		<name>6 - JHotDraw v5.1</name>
		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="73">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.standard.HandleTracker</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Handle</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.ChangeConnectionEndHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.ChangeConnectionStartHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.figures.ElbowHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.LocatorHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.ConnectionHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.EastHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.figures.FontSizeHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.NorthEastHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.NorthHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.NorthWestHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.NullHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.figures.GroupHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.SouthEastHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.SouthHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.SouthWestHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.standard.WestHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonScaleHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.figures.RadiusHandle</entity></adapter>
							<adapter roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleRotationHandle</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.framework.Figure</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.framework.ConnectionFigure</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.framework.Locator</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></adaptee>
							<adaptee roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Command">
			<microArchitectures>
				<microArchitecture number="74">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.application.DrawApplication</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.applet.DrawApplet</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.samples.javadraw.JavaDrawApp</entity></client>
						</clients>
						<invokers>
							<invoker roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></invoker>
							<invoker roleKind="Class"><entity>CH.ifa.draw.util.CommandButton</entity></invoker>
							<invoker roleKind="Class"><entity>CH.ifa.draw.util.CommandChoice</entity></invoker>
							<invoker roleKind="Class"><entity>CH.ifa.draw.util.CommandMenu</entity></invoker>
						</invokers>
						<commands>
							<command roleKind="AbstractClass"><entity>CH.ifa.draw.util.Command</entity></command>
						</commands>
						<concreteCommands>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.AlignCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.BringToFrontCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.ChangeAttributeCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.CopyCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.CutCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.DeleteCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.DuplicateCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.PasteCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.figures.GroupCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.figures.InsertImageCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.SendToBackCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.standard.ToggleGridCommand</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>CH.ifa.draw.figures.UngroupCommand</entity></concreteCommand>
						</concreteCommands>
						<receivers>
							<receiver roleKind="Class"><entity>CH.ifa.draw.framework.Figure</entity></receiver>
							<receiver roleKind="Class"><entity>CH.ifa.draw.framework.FigureSelection</entity></receiver>
							<receiver roleKind="Class"><entity>CH.ifa.draw.framework.Drawing</entity></receiver>
							<receiver roleKind="Class"><entity>CH.ifa.draw.framework.DrawingView</entity></receiver>
						</receivers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Composite">
			<microArchitectures>
				<microArchitecture number="75">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.figures.GroupCommand</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.samples.pert.PertFigureCreationTool</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.applet.DrawApplet</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.application.DrawApplication</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.samples.javadraw.JavaDrawViewer</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.samples.javadraw.JavaDrawApp</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.samples.javadraw.JavaDrawApplet</entity></client>
						</clients>
						<components>
							<component roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Figure</entity></component>
						</components>
						<composites>
							<composite roleKind="Class"><entity>CH.ifa.draw.standard.CompositeFigure</entity></composite>
							<composite roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></composite>
							<composite roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></composite>
							<composite roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></composite>
							<composite roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></composite>
						</composites>
						<leaves>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.LineFigure</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></leaf>
							<leaf roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></leaf>
						</leaves>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Decorator">
			<microArchitectures>
				<microArchitecture number="76">
					<roles>
						<components>
							<component roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Figure</entity></component>
						</components>
						<concreteComponents>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.LineFigure</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteComponent>
							<concreteComponent roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteComponent>
						</concreteComponents>
						<decorators>
							<decorator roleKind="AbstractClass"><entity>CH.ifa.draw.standard.DecoratorFigure</entity></decorator>
						</decorators>
						<concreteDecorators>
							<concreteDecorator roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></concreteDecorator>
							<concreteDecorator roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></concreteDecorator>
						</concreteDecorators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Factory Method">
			<microArchitectures>
				<microArchitecture number="77">
					<roles>
						<products>
							<product roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Connector</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.ChopBoxConnector</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.ChopEllipseConnector</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.contrib.ChopPolygonConnector</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineConnector</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.LocatorConnector</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.ShortestDistanceConnector</entity></concreteProduct>
						</concreteProducts>
						<creators>
							<creator roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Figure</entity></creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.standard.AbstractFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></concreteCreator>
						</concreteCreators>
					</roles>
				</microArchitecture>
				<microArchitecture number="78">
					<roles>
						<products>
							<product roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Handle</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.EastHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.NorthHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.NorthEastHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.NorthWestHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.SouthHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.SouthEastHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.SouthWestHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.WestHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonScaleHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleRotationHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.NullHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.FontSizeHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.ConnectionHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.GroupHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.ChangeConnectionStartHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.ChangeConnectionEndHandle</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.figures.ElbowHandle</entity></concreteProduct>
						</concreteProducts>
						<creators>
							<creator roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Figure</entity></creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.LineFigure</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteCreator>
						</concreteCreators>
					</roles>
				</microArchitecture>
				<microArchitecture number="79">
					<roles>
						<products>
							<product roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Tool</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.HandleTracker</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.DragTracker</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>CH.ifa.draw.standard.SelectAreaTracker</entity></concreteProduct>
						</concreteProducts>
						<creators>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class"><entity>CH.ifa.draw.standard.SelectionTool</entity></concreteCreator>
						</concreteCreators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Null Object">
			<microArchitectures>
				<microArchitecture number="80">
					<roles>
						<nullObjects>
							<nullObject roleKind="Class"><entity>CH.ifa.draw.standard.NullHandle</entity></nullObject>
						</nullObjects>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Observer">
			<microArchitectures>
				<microArchitecture number="81">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Figure</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.LineFigure</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>CH.ifa.draw.framework.FigureChangeListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.standard.FigureChangeEventMulticaster</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
				<microArchitecture number="82">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Drawing</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>CH.ifa.draw.framework.DrawingChangeListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
				<microArchitecture number="82b">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Connector</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.standard.ChopBoxConnector</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.standard.LocatorConnector</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>CH.ifa.draw.figures.ShortestDistanceConnector</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>CH.ifa.draw.framework.ConnectionFigure</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Prototype">
			<microArchitectures>
				<microArchitecture number="83">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.standard.ConnectionHandle</entity></client>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.standard.ConnectionTool</entity></client>
						</clients>
						<prototypes>
							<prototype roleKind="AbstractClass"><entity>CH.ifa.draw.framework.ConnectionFigure</entity></prototype>
						</prototypes>
						<concretePrototypes>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concretePrototype>
						</concretePrototypes>
					</roles>
				</microArchitecture>
				<microArchitecture number="84">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>CH.ifa.draw.standard.CreationTool</entity></client>
						</clients>
						<prototypes>
							<prototype roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Figure</entity></prototype>
						</prototypes>
						<concretePrototypes>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.LineFigure</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concretePrototype>
							<concretePrototype roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concretePrototype>
						</concretePrototypes>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="85">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>CH.ifa.draw.util.Clipboard</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
				<microArchitecture number="86">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>CH.ifa.draw.util.Iconkit</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="State">
			<microArchitectures>
				<microArchitecture number="87">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></context>
						</contexts>
						<states>
							<state roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Tool</entity></state>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.AbstractTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.BorderTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.ConnectionTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.CreationTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigureCreationTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.TextTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.ConnectedTextTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.DragTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.FollowURLTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.HandleTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.ScribbleTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.SelectAreaTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.SelectionTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.MySelectionTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.URLTool</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
				<microArchitecture number="88">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.SelectionTool</entity></context>
						</contexts>
						<states>
							<state roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Tool</entity></state>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.DragTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.HandleTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.SelectAreaTracker</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
				<microArchitecture number="88b">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.framework.DrawingView</entity></context>
						</contexts>
						<states>
							<state roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Tool</entity></state>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.AbstractTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.BorderTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.ConnectionTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.CreationTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigureCreationTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.TextTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.ConnectedTextTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.DragTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.FollowURLTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.HandleTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.figures.ScribbleTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.SelectAreaTracker</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.standard.SelectionTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.MySelectionTool</entity></concreteState>
							<concreteState roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.URLTool</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Strategy">
			<microArchitectures>
				<microArchitecture number="89">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.AbstractFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.DecoratorFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.framework.ConnectionFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.ConnectionTool</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.ChangeConnectionHandle</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.ConnectionHandle</entity></context>
						</contexts>
						<strategies>
							<strategy roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Connector</entity></strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.ChopBoxConnector</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.figures.ChopEllipseConnector</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.contrib.ChopPolygonConnector</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineConnector</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.LocatorConnector</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.figures.ShortestDistanceConnector</entity></concreteStrategy>
						</concreteStrategies>
					</roles>
					<comment>
The ConnectionFigure interface defines actually the Strategy design pattern.
					</comment>
				</microArchitecture>
				<microArchitecture number="90">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></context>
						</contexts>
						<strategies>
							<strategy roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Painter</entity></strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.BufferedUpdateStrategy</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.PatternPainter</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.SimpleUpdateStrategy</entity></concreteStrategy>
						</concreteStrategies>
					</roles>
					<comment>
The DrawingView interface defines actually the Strategy design pattern.
					</comment>
				</microArchitecture>
				<microArchitecture number="91">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonHandle</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.LocatorConnector</entity></context>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.LocatorHandle</entity></context>
						</contexts>
						<strategies>
							<strategy roleKind="AbstractClass"><entity>CH.ifa.draw.framework.Locator</entity></strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.figures.ElbowTextLocator</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.OffsetLocator</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineLocator</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.RelativeLocator</entity></concreteStrategy>
						</concreteStrategies>
					</roles>
				</microArchitecture>
				<microArchitecture number="92">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawingView</entity></context>
						</contexts>
						<strategies>
							<strategy roleKind="AbstractClass"><entity>CH.ifa.draw.framework.PointConstrainer</entity></strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class"><entity>CH.ifa.draw.standard.GridConstrainer</entity></concreteStrategy>
						</concreteStrategies>
					</roles>
					<comment>
The DrawingView interface defines actually the Strategy design pattern.
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Template Method">
			<microArchitectures>
				<microArchitecture number="93">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass"><entity>CH.ifa.draw.standard.AbstractFigure</entity></abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.GroupFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.standard.StandardDrawing</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.BouncingDrawing</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.javadraw.AnimationDecorator</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.BorderDecorator</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.PolyLineFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.LineFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.LineConnection</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.ElbowConnection</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.pert.PertDependency</entity></concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
				<microArchitecture number="94">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass"><entity>CH.ifa.draw.figures.AttributeFigure</entity></abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.EllipseFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.ImageFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.contrib.PolygonFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.RectangleFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.contrib.DiamondFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.contrib.TriangleFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.RoundRectangleFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.TextFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.samples.net.NodeFigure</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>CH.ifa.draw.figures.NumberTextFigure</entity></concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>

	<program type="Java">
		<name>8 - MapperXML v1.9.7</name>
		<designPattern name="Abstract Factory">
			<microArchitectures>
				<microArchitecture number="95">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>com.taursys.html.test.HTMLComponentFactoryTest</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>com.taursys.xml.ComponentFactory</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>com.taursys.html.HTMLComponentFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>com.taursys.xml.Component</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind ="Class"><entity>com.taursys.xml.DispatchingContainer</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.DocumentElement</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.Form</entity></product>
							<product roleKind ="Class"><entity>com.taursys.servlet.ServletForm</entity></product>
							<product roleKind ="Class"><entity>com.taursys.servlet.DefaultMessageForm</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.Template</entity></product>
							<product roleKind ="Class"><entity>com.taursys.html.test.HTMLComponentFactoryTest.TestContainer</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.Parameter</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.CheckBoxField</entity></product>
							<product roleKind ="Class"><entity>com.taursys.html.HTMLCheckBox</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.SelectField</entity></product>
							<product roleKind ="Class"><entity>com.taursys.html.HTMLSelect</entity></product>
							<product roleKind ="Class"><entity>com.taursys.servlet.test.TestComponent</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.event.test.TestComponent</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.TextField</entity></product>
							<product roleKind ="Class"><entity>com.taursys.html.HTMLAnchorURL</entity></product>
							<product roleKind ="Class"><entity>com.taursys.html.HTMLInputText</entity></product>
							<product roleKind ="Class"><entity>com.taursys.html.HTMLTextArea</entity></product>
							<product roleKind ="Class"><entity>com.taursys.servlet.test.TestParameter</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.event.test.TestParameter</entity></product>
							<product roleKind ="Class"><entity>com.taursys.xml.Trigger</entity></product>
						</products>
					</roles>
					<comment>
						ComponentFactory may be extended as specialized XML documents are needed. Therefore, it is possible
						to create our own extension of CompenentFactory as to generate Components for specialized XML document,
						just like " HTMLComponentFactory is used to automate the creation of Components based on the HTML Document 
						and its Elements. " 
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="96">
					<roles>
						<clients>
							<client roleKind="Class"><entity>com.taursys.html.test.HTMLComponentFactoryTest.TestContainer</entity></client>
							<client roleKind="Class"><entity>com.taursys.xml.Form</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>com.taursys.dom.DocumentAdapter</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>com.taursys.dom.DOM_1_20000929_DocumentAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>org.w3c.dom.Document</entity></adaptee>
						</adaptees>
					</roles>
					<comment>
						Here is a quote from "http://mapper.sourceforge.net/quickguidexml.shtml" :
						" MapperXML uses a DocumentAdapter to hold and manipulate the DOM Document. The DocumentAdapter protects 
						the application from differences between the DOM versions. The World Wide Web Consortium's Java Language 
						Binding for the DOM, has changed the DOM's interface as new versions are released. The different versions
						have added and removed methods (normally a bad thing to do in Java). This created a challenge to be able
						to design an application that could work with any version. Using an Adapter pattern solved the problem.
						There can be different implementations of the DocumentAdapter interface that can work with the various
						versions of the DOM. The current version of MapperXML contains a single, general purpose adapte,:
						DOM_1_20000929_DocumentAdapter, which works with most DOM versions. "
					</comment>
				</microArchitecture>
				<microArchitecture number="97">
					<roles>
						<clients>
							<client roleKind="Class"><entity>com.taursys.debug.Debug</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>com.taursys.debug.LoggerAdapter</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>com.taursys.debug.SimpleLogger</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>java.lang.System</entity></adaptee>
						</adaptees>
					</roles>
					<comment>
From Sultan Alhusain on 13/01/19:					
"I believe the Adaptee role is played by java.io.PrintStream class as
the invoked method (println) is in this class. A static reference for
this class (java.io.PrintStream) is stored in the field (err) of the
System class."
From Yann-Gaël Guéhéneuc on 13/04/21:
"Yes, you mean that in the method:
	private void printMessage(int level, Object message) {...}
it is really "err" that is adapted rather than "System", actually 
the best would be to say that it is "System.err" really but it would 
not match the definition of the pattern and would not fit in the XML 
file."
Therefore, this microarchitecture is kept but should be used with caution.					
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Composite">
			<microArchitectures>
				<microArchitecture number="98">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity> com.taursys.xml.render.AbstractRenderer</entity></client> 
							<client roleKind="Class"><entity>com.taursys.xml.event.CloseFormDispatcher</entity></client>
							<client roleKind="Class"><entity>com.taursys.xml.event.OpenFormDispatcher</entity></client>
							<client roleKind="Class"><entity>com.taursys.xml.event.InitFormDispatcher</entity></client>
							<client roleKind="Class"><entity>com.taursys.xml.event.InitContextDispatcher</entity></client>
						</clients>
						<components>
							<component roleKind="AbstractClass"><entity>com.taursys.xml.Component</entity></component>
						</components>
						<composites>
							<composite roleKind="Class"><entity>com.taursys.xml.Container</entity></composite>
						</composites>
						<leaves>
							<!-- <leaf roleKind ="Class"><entity>com.taursys.xml.DispatchingContainer</entity></leaf> -->
							<leaf roleKind ="Class"><entity>com.taursys.xml.DocumentElement</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.Form</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.servlet.ServletForm</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.servlet.DefaultMessageForm</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.Template</entity></leaf>
							<!-- <leaf roleKind ="Class"><entity>com.taursys.html.test.HTMLComponentFactoryTest.TestContainer</entity></leaf> -->
							<leaf roleKind ="Class"><entity>com.taursys.xml.Parameter</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.CheckBoxField</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.html.HTMLCheckBox</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.SelectField</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.html.HTMLSelect</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.servlet.test.TestComponent</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.event.test.TestComponent</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.TextField</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.html.HTMLAnchorURL</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.html.HTMLInputText</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.html.HTMLTextArea</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.servlet.test.TestParameter</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.event.test.TestParameter</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.Trigger</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.Button</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.servlet.test.TestComponent</entity></leaf>
							<leaf roleKind ="Class"><entity>com.taursys.xml.event.test.TestComponent</entity></leaf>	
						</leaves>
					</roles>
					<comment>
From Sultan Alhusain on 13/01/19:					
"There exist two way association and method invocation between the
Component and the Composite classes. Actually, each object of the
type Component has a "parent" of the type Composite. Also, two of the
classes that were listed as being Leafs (DispatchingContainer and
TestContainer) were actually subclasses of the Composite class.
Moreover, the Component and the Composite classes have no similar
methods, which would have the mean by which individual components and
composition of them can be treated uniformaly."
From Yann-Gaël Guéhéneuc on 13/04/21:
"As far as I can tell, a Component knows its parent just for the sake 
of simplicity, through the use of the method
	public com.taursys.xml.Container getParent() {...}
so I would still consider that Component plays the role of Component 
and that Container plays the role of Composite (add, remove methods 
plus invocations of various methods on components). You are right 
that the two classes DispatchingContainer and TestContainer must not 
be leaves! The fact that Component and Composite do not share 
methods, to me, points to a bad design or to reuse (both classes 
being abstract)."
Therefore, this microarchitecture is kept but should be used with caution.					
					</comment>
				</microArchitecture>
			</microArchitectures>
		 </designPattern>
		 <designPattern name="Facade">
		 	<microArchitectures>
				<microArchitecture number="99">
		 			<roles>
		 				<facades>
		 					<facade roleKind="Class"><entity>com.taursys.servlet.ServletForm</entity></facade>
		 				</facades>
						<subsystemClasses>
							<subsystemClass roleKind="AbstractClass"><entity>com.taursys.servlet.respond.Responser</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.respond.HTMLResponser</entity></subsystemClass>
							<subsystemClass roleKind="AbstractClass"><entity>com.taursys.servlet.Dispatcher</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.ServletFormDispatcher</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.respond.ServletInputDispatcher</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.respond.RenderDispatcher</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.respond.ServletTriggerDispatcher</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.respond.RecycleDispatcher</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.HttpMultiPartServletRequest</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>com.taursys.dom.DocumentAdapter</entity></subsystemClass>
						</subsystemClasses>
		 			</roles>
					<comment>
		 				The ServletForm class is responsible for proceeding requests originating from the ServletApp.
		 				Its doGet method determines a default processing cycle which is most often redefined by its 
						subclasses. In this application, only DefaultMessageForm is derived from ServletForm. Anyhow, 
						the client classes are not aware of the subsystem :  " ServletForm dispatches commands and data
						from the request object to the individual components it contains. The dispatching occurs in the
						doGet method of the ServletForm. [...] The ServletForm is composed of many subcomponents to 
						support the processing of the request: ServletParameterDispatcher, ServletInputDispatcher,
						RenderDispatcher, ServletTriggerDispatcher, RecycleDispatcher, DocumentAdapter and Responder. "
						(Quoting from http://mapper.sourceforge.net/mapperxml/pagesforms.shtml)
		 			</comment>
				</microArchitecture>
				<!--
				<microArchitecture number="">
					<roles>
						<facades>
							<facade rolekind="Class"><entity>com.taursys.servlet.ServletApp</entity></facade>
						</facades>
						<subsystemClasses>
							<subsystemClass roleKind="Class"><entity>com.taursys.servlet.ServletForm</entity></subsystemClass>
						</subsystemClasses>
					</roles>
					<comment>
						ServletApp plays the role of a mediator or a dispatcher, as it is responsible for creating 
						ServletForm. It dispatches requests to a ServletForm, as the servlet acts as " a front 
						controller which simply dispatches requests to the specific MapperXML ServletForm. "
						(Quoting from http://mapper.sourceforge.net/quickguidexml.shtml)
					</comment>
				</microArchitecture>
				-->
		 	</microArchitectures>
		 </designPattern>
		 <designPattern name="Factory Method">
			<microArchitectures>
				<microArchitecture number="100">
					<roles>
						<creators>
							<creator roleKind="Abstract"><entity>com.taursys.xml.ComponentFactory</entity></creator>
						</creators>
						<conreteCreators>
							<concreteCreator roleKind="Class"><entity>com.taursys.html.HTMLComponentFactory</entity></concreteCreator>
						</conreteCreators>
						<products>
							<product roleKind="AbstractClass"><entity>com.taursys.xml.Component</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.DispatchingContainer</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.DocumentElement</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.Form</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.servlet.ServletForm</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.servlet.DefaultMessageForm</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.Template</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.html.test.HTMLComponentFactoryTest.TestContainer</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.Parameter</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.CheckBoxField</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.html.HTMLCheckBox</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.SelectField</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.html.HTMLSelect</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.servlet.test.TestComponent</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.event.test.TestComponent</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.TextField</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.html.HTMLAnchorURL</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.html.HTMLInputText</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.html.HTMLTextArea</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.servlet.test.TestParameter</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.event.test.TestParameter</entity></concreteProduct>
							<concreteProduct roleKind ="Class"><entity>com.taursys.xml.Trigger</entity></concreteProduct>
						</concreteProducts>
					</roles>
				</microArchitecture>
			</microArchitectures>
		 </designPattern>
		 <designPattern name="Observer">
		 	<microArchitectures>
				<microArchitecture number="101">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>com.taursys.xml.Component</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.DispatchingContainer</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.DocumentElement</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.Form</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.servlet.ServletForm</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.servlet.DefaultMessageForm</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.Template</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.html.test.HTMLComponentFactoryTest</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.Parameter</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.CheckboxField</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.html.HTMLCheckBox</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.SelectField</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.html.HTMLSelect</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.servlet.test.ServletInputDispatcherTest.TestComponent</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.event.test.InputDispatcherTest.TestComponent </entity></concreteSubject>	
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.TextField</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.html.HTMLAnchorURL</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.html.HTMLInputText</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.html.HTMLTextArea</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.servlet.test.ServletParameterDispatcherTest.TestParameter</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.test.ParameterDispatcherTest.TestParameter</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.Trigger</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.Button</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.servlet.test.TestComponent</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>com.taursys.xml.event.test.TestComponent</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<concreteObserver roleKind="Class"><entity>com.taursys.xml.event.ParameterListener</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>com.taursys.xml.event.RecycleListener</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>com.taursys.xml.event.RenderListener</entity></concreteObserver>
							<concreteObserver roleKind="Class"><entity>com.taursys.xml.TriggerListener</entity></concreteObserver>
						</observers>
						<concreteObservers>
						</concreteObservers>
					</roles>
					<comment>
From Sultan Alhusain on 13/01/19:					
"I think each of the classes listed under the concreteObservers tag is 
actually defining the interface for one type of Listeners (observers), 
which makes them observers and NOT concrete observers. I think the fact 
that all of these interfaces extends java.util.EventListener class does 
not make it the Observer because it was extended for functionality (not
design) purposes."
From Yann-Gaël Guéhéneuc on 13/04/21:
"I agree that they should be the Observers, not ConcreteObservers but 
I believe, given what's happening to them in Component, that they do 
fulfill the intent of the Observer pattern."
Therefore, this microarchitecture is kept but should be used with caution.					

For com.taursys.xml.event.RenderListener, the concrete observers are anonymous classes instantiated in classes:
- com.taursys.examples.simpleweb.InventoryEditPage;
- and, com.taursys.examples.simpleweb.RenderPage.
while for com.taursys.xml.TriggerListener, there are anonymous classes instiantiated in:
- com.taursys.examples.simpleweb.ActionPage;
- and, com.taursys.examples.simpleweb.UploadPage.
					</comment>
				</microArchitecture>
			</microArchitectures>
		 </designPattern>	
		 <designPattern name="Singleton">
		       <microArchitectures>
			       <microArchitecture number="102">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>com.taursys.debug.Debug</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
				<microArchitecture number="103">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>com.taursys.html.HTMLComponentFactory</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
				<microArchitecture number="104">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>com.taursys.tools.CodeGenerator</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Strategy">
			<microArchitectures>
				<microArchitecture number="105">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>com.taursys.dom.DOM_1_20000929_DocumentAdapter</entity></context>
						</contexts>
						<strategies>
							<strategy roleKind="AbstractClass"><entity>com.taursys.dom.AbstractWriter</entity></strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class"><entity>com.taursys.dom.XMLWriter</entity></concreteStrategy>
						</concreteStrategies>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Template Method">
			<microArchitectures>
				<microArchitecture number="106">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass"><entity>com.taursys.xml.Component</entity></abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.DispatchingContainer</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.DocumentElement</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Form</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.servlet.ServletForm</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.servlet.DefaultMessageForm</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Template</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.html.test.HTMLComponentFactoryTest.TestContainer</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Parameter</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.CheckBox</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLCheckBox</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.SelectField</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLSelect</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.TextField</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLAnchorURL</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLInputText</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLTextArea</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Trigger</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Button</entity></concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
				<microArchitecture number="107">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass"><entity>com.taursys.xml.Container</entity></abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.DispatchingContainer</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.DocumentElement</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Form</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.servlet.ServletForm</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.servlet.DefaultMessageForm</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>com.taursys.xml.Template</entity></concreteClass>
						</concreteClasses>
					</roles>
					<comment>
						Cette micro-architecture est en fait une sous micro-archictecture de la precedente.
					</comment>
				</microArchitecture>
				<microArchitecture number="108">
						<roles>
							<abstractClasses>
								<abstractClass roleKind="AbstractClass"><entity>com.taursys.xml.AbstractField</entity></abstractClass>
							</abstractClasses>
							<concreteClasses>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.CheckBox</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLCheckBox</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.SelectField</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLSelect</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.TextField</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLAnchorURL</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLInputText</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.html.HTMLTextArea</entity></concreteClass>
							</concreteClasses>
						</roles>
						<comment>
							Cette micro-architecture est en fait une sous micro-archictecture de la precedente.
						</comment>
				</microArchitecture>
				<microArchitecture number="109">
						<roles>
							<abstractClasses>
								<abstractClass roleKind="AbstractClass"><entity>com.taursys.xml.event.Dispatcher</entity></abstractClass>
							</abstractClasses>
							<concreteClasses>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.CloseFormDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.InitContextDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.InitFormDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.InputDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.TemplateInputDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.OpenFormDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.ParameterDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.RecycleDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.RenderDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.servlet.ServletInputDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.servlet.ServletParameterDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.servlet.ServletTriggerDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.TriggerDispatcher</entity></concreteClass>
								<concreteClass roleKind="Class"><entity>com.taursys.xml.event.TemplateTriggerDispatcher</entity></concreteClass>
							</concreteClasses>
						</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>
	
	<program type="Java">
		<name>10 - Nutch v0.4</name>
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="110">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>net.nutch.io.NullWritable</entity></singleton>
						</singletons>
					</roles>
					<comment>
						Un peu facil les singletons ;-p
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Bridge">
			<microArchitectures>
				<microArchitecture number="111">
					<roles>
						<abstractions>
							<abstraction roleKind="AbstractClass">
								<entity>net.nutch.db.DistributedWebDBReader.EnumCall</entity>
							</abstraction>
						</abstractions>
						<refinedAbstractions>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.LinkEnumCall</entity>
							</refinedAbstraction>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.PageEnumCall</entity>
							</refinedAbstraction>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.PageByMD5EnumCall</entity>
							</refinedAbstraction>
						</refinedAbstractions>
						<implementors>
							<implementor roleKind="AbstractClass">
								<entity>java.util.Enumeration</entity>
							</implementor>
						</implementors>
						<concreteImplementors>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.DBSectionReader.MapEnumerator</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.DBSectionReader.IndexEnumerator</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.DBSectionReader.TableEnumerator</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.MetaEnumerator</entity>
							</concreteImplementor>
						</concreteImplementors>
					</roles>
				</microArchitecture>
				<microArchitecture number="112">
					<roles>
						<abstractions>
							<abstraction roleKind="AbstractClass">
								<entity>net.nutch.db.EditSectionGroupWriter.KeyExtractor</entity>
							</abstraction>
						</abstractions>
						<refinedAbstractions>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.PageURLExtractor</entity>
							</refinedAbstraction>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.PageMD5Extractor</entity>
							</refinedAbstraction>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.LinkURLExtractor</entity>
							</refinedAbstraction>
							<refinedAbstraction roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.LinkMD5Extractor</entity>
							</refinedAbstraction>
						</refinedAbstractions>
						<implementors>
							<implementor roleKind="AbstractClass">
								<entity>net.nutch.io.WritableComparable</entity>
							</implementor>
						</implementors>
						<concreteImplementors>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.Link</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.Page</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.PageInstruction</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.LinkInstruction</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PageInstruction</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinkInstruction</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.io.IntWritable</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.io.LongWritable</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.io.MD5Hash</entity>
							</concreteImplementor>
							<concreteImplementor roleKind="Class">
								<entity>net.nutch.io.UTF8</entity>
							</concreteImplementor>
						</concreteImplementors>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Command">
			<microArchitectures>
				<microArchitecture number="113">
					<roles>
						<commands>
							<command roleKind="AbstractClass">
								<entity>net.nutch.db.DistributedWebDBWriter.CloseProcessor</entity>
							</command>
						</commands>
						<concreteCommands>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PagesByURLProcessor</entity>
							</concreteCommand>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PagesByMD5Processor</entity>
							</concreteCommand>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinksByURLProcessor</entity>
							</concreteCommand>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinksByMD5Processor</entity>
							</concreteCommand>
						</concreteCommands>
						<clients>
							<client roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter</entity>
							</client>
						</clients>
						<invokers>
							<invoker roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter</entity>
							</invoker>
						</invokers>
						<receivers>
							<receiver roleKind="Class">
								<entity>net.nutch.db.Page</entity>
							</receiver>
							<receiver roleKind="Class">
								<entity>net.nutch.db.Link</entity>
							</receiver>
						</receivers>
					</roles>
					<comment>
						Ici,nous avons une architecture assez similaire a celle
						decrite par le GoF, a l'exception pres que l'objet Command
						est une abstract class et non une interface. Dans la plupart
						des cas nous pourrions dire que l'utilisation de l'un ou
						l'autre changerait l'essence meme de la structure d'un module.
						Mais pour ce cas, nous pensons que la ou les personnes qui
						ont ecrit ce code ont choisi d'utiliser une abstract class
						seulement dans le but de ne pas alourdir le code. Car en
						regardant de plus pres, nous pouvons remarquer que la methode
						closeDown() de la class en question fournit des actions
						standards. Par suite ces actions utiliserons des methodes
						mergeEdit() qui elles sont specialise et initialise dans
						les concreteCommandes.
					</comment>
				</microArchitecture>
				<microArchitecture number="114">
					<roles>
						<commands>
							<command roleKind="AbstractClass">
								<entity>net.nutch.db.WebDBWriter.CloseProcessor</entity>
							</command>
						</commands>
						<concreteCommands>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.LinksByMD5Processor</entity>
							</concreteCommand>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.LinksByURLProcessor</entity>
							</concreteCommand>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.PagesByMD5Processor</entity>
							</concreteCommand>
							<concreteCommand roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.PagesByURLProcessor</entity>
							</concreteCommand>
						</concreteCommands>
						<clients>
							<client roleKind="Class">
								<entity>net.nutch.db.WebDBWriter</entity>
							</client>
						</clients>
						<invokers>
							<invoker roleKind="Class">
								<entity>net.nutch.db.WebDBWriter</entity>
							</invoker>
						</invokers>
						<receivers>
							<receiver roleKind="Class">
								<entity>net.nutch.db.Page</entity>
							</receiver>
							<receiver roleKind="Class">
								<entity>net.nutch.db.Link</entity>
							</receiver>
						</receivers>
					</roles>
					<comment>
						Ici, nous avons une architecture assez similaire a celle
						decrite par le GoF, a l'exception pres que l'objet Command
						est une abstract class et non une interface. Dans la plupart
						des cas nous pourrions dire que l'utilisation de l'un ou
						l'autre changerait l'essence meme de la structure d'un module.
						Mais pour ce cas, nous pensons que la ou les personnes qui ont
						ecrit ce code ont choisi d'utiliser une abstract class
						seulement dans le but de ne pas alourdir le code. Car en
						regardant de plus pres, nous pouvons remarquer que la methode
						closeDown() de la class en question fournit des actions
						standards. Par suite ces actions utiliserons des methodes
						mergeEdit() qui elles sont specialise et initialise dans
						les concreteCommandes
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Memento">
			<microArchitectures>
				<microArchitecture number="115">
					<roles>
						<mementos>
							<memento roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.LinkURLExtractor</entity>
							</memento>
							<memento roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.LinkMD5Extractor</entity>
							</memento>
							<memento roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.PageURLExtractor</entity>
							</memento>
							<memento roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter.PageMD5Extractor</entity>
							</memento>
						</mementos>
						<originators>
							<originator roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinksByURLProcessor</entity>
							</originator>
							<originator roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinksByMD5Processor</entity>
							</originator>
							<originator roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PagesByURLProcessor</entity>
							</originator>
							<originator roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PagesByMD5Processor</entity>
							</originator>
						</originators>
						<caretakers>
							<caretaker roleKind="Class">
								<entity>net.nutch.db.EditSectionGroupWriter</entity>
							</caretaker>
						</caretakers>
					</roles>
					<comment>
						Ici, nous avons trouve ce Memento par deduction a partir du
						Command, trouve precedemment. Puisque par la definition, donne
						par le GoF, un Command est sense encapsuler une requete sous
						forme d'objet. Nous pourrions donc, manipuler ces objets dans
						des listes, les enregistrer, les supprimer, ..., et donc les
						manipuler ulterieurement. D'ou l'idee que lorsque l'on trouve
						un Command, il pourrait avoir un Memento pas loin afin de gerer
						les requetes sous formes d'objets.
					</comment>
				</microArchitecture>
				<microArchitecture number="116">
					<roles>
						<mementos>
							<memento roleKind="Class">
								<entity>net.nutch.io.SequenceFile.Writer</entity>
							</memento>
						</mementos>
						<originators>
							<originator roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.LinksByMD5Processor</entity>
							</originator>
							<originator roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.LinksByURLProcessor</entity>
							</originator>
							<originator roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.PagesByMD5Processor</entity>
							</originator>
							<originator roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.PagesByURLProcessor</entity>
							</originator>
						</originators>
						<caretakers>
							<caretaker roleKind="Class">
								<entity>Originator</entity>
							</caretaker>
						</caretakers>
					</roles>
					<comment>
						Nous pensons etre en presence d'une structure presentant des
						similitudes avec un memento, mais pour l'instant nous
						n'avons pas encore pu determiner l'objet sense representer
						le Caretaker. Ce pourrait-il que l'objet Originator puisse
						aussi jouer le role de Caretaker ??
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Template Method">
			<microArchitectures>
				<microArchitecture number="117">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass">
								<entity>net.nutch.db.DistributedWebDBReader.EnumCall</entity>
							</abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.PageEnumCall</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.PageByMD5EnumCall</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader.LinkEnumCall</entity>
							</concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
				<microArchitecture number="118">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass">
								<entity>net.nutch.db.DistributedWebDBWriter.CloseProcessor</entity>
							</abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PagesByURLProcessor</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.PagesByMD5Processor</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinksByURLProcessor</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter.LinksByMD5Processor</entity>
							</concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
				<microArchitecture number="119">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass">
								<entity>net.nutch.db.KeyExtractor</entity>
							</abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.PageURLExtractor</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.PageMD5Extractor</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.LinkURLExtractor</entity>
							</concreteClass>
							<concreteClass roleKind="Class">
								<entity>net.nutch.db.LinkMD5Extractor</entity>
							</concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="120">
					<roles>
						<targets>
							<target roleKind="AbstractClass">
								<entity>net.nutch.io.Writable</entity>
							</target>
							<target roleKind="AbstractClass">
								<entity>net.nutch.io.WritableComparable</entity>
							</target>
						</targets>
						<clients>
							<client roleKind="Class">
								<entity>net.nutch.db.WebDBWriter.PageInstructionWriter</entity>
							</client>
						</clients>
						<adaptees>
							<adaptee roleKind="AbstractClass">
								<entity>Cloneable</entity>
							</adaptee>
						</adaptees>
						<adapters>
							<adapter roleKind="Class">
								<entity>net.nutch.db.Page</entity>
							</adapter>
						</adapters>
					</roles>
				</microArchitecture>
				<microArchitecture number="121">
					<roles>
						<targets>
							<target roleKind="AbstractClass">
								<entity>net.nutch.io.Writable</entity>
							</target>
						</targets>
						<clients>
							<client roleKind="Class">
								<entity>"Still searching"</entity>
							</client>
						</clients>
						<adaptees>
							<adaptee roleKind="AbstractClass">
								<entity>Cloneable</entity>
							</adaptee>
						</adaptees>
						<adapters>
							<adapter roleKind="Class">
								<entity>net.nutch.pagedb.FetchListEntry</entity>
							</adapter>
						</adapters>
					</roles>
					<comment>
						Bon ok, il manque le client..., mais a part ca...
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Strategy">
			<microArchitectures>
				<microArchitecture number="122">
					<roles>
						<strategies>
							<strategy roleKind="AbstractClass">
								<entity>net.nutch.db.IWebDBWriter</entity>
							</strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter</entity>
							</concreteStrategy>
							<concreteStrategy roleKind="Class">
								<entity>net.nutch.db.WebDBWriter</entity>
							</concreteStrategy>
						</concreteStrategies>
						<contexts>
							<context roleKind="Class">
								<entity>net.nutch.db.WebDBInjector</entity>
							</context>
						</contexts>
					</roles>
					<comment>
						Il nous manquait qu'un Client pour avoir un Flyweight!!!
						Sentiment de frustration !!!
					</comment>
				</microArchitecture>
				<microArchitecture number="123">
					<roles>
						<strategies>
							<strategy roleKind="AbstractClass">
								<entity>net.nutch.db.IWebDBReader</entity>
							</strategy>
						</strategies>
						<concreteStrategies>
							<concreteStrategy roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader</entity>
							</concreteStrategy>
							<concreteStrategy roleKind="Class">
								<entity>net.nutch.db.WebDBReader</entity>
							</concreteStrategy>
						</concreteStrategies>
						<contexts>
							<context roleKind="Class">
								<entity>net.nutch.tools.FetchListTool</entity>
							</context>
						</contexts>
					</roles>
					<comment>
						Il nous manquait qu'un Client pour avoir un Flyweight!!!
						Sentiment de frustration !!!
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Iterator">
			<microArchitectures>
				<microArchitecture number="124">
					<roles>
						<iterators>
							<iterator roleKind="AbstractClass">
								<entity>net.nutch.db.IWebDBReader</entity>
							</iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBReader</entity>
							</concreteIterator>
							<concreteIterator roleKind="Class">
								<entity>net.nutch.db.WebDBReader</entity>
							</concreteIterator>
						</concreteIterators>
						<aggregates>
							<aggregate roleKind="AbstractClass">
								<entity>net.nutch.db.IWebDBWriter</entity>
							</aggregate>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class">
								<entity>net.nutch.db.DistributedWebDBWriter</entity>
							</concreteAggregate>
							<concreteAggregate roleKind="Class">
								<entity>net.nutch.db.WebDBWriter</entity>
							</concreteAggregate>
						</concreteAggregates>
						<clients>
							<client roleKind="Class">
								<entity>net.nutch.tools.DistributedAnalysisTool</entity>
							</client>
						</clients>
					</roles>
					<comment>
						Ici, nous avons trouve un Iterator a partir de deux Strategy.
						En fait, nous avons mis en evidance un objet commun. Un client
						qui lui utilise les deux Strategy, par suite nous avons remarque
						que les Objets ConcreteStrategy interagissent entre les deux
						Strategy.
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>
	
	<program type="Java">
		<name>11 - PMD v1.8</name>
		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="125">
					<roles>
						<adaptees>
							<adaptee roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParserVisitorAdapter</entity>
							</adaptee>
						</adaptees>
						<adapters>
							<adapter roleKind="Class">
								<entity>net.sourceforge.pmd.AbstractRule</entity>
							</adapter>
						</adapters>
						<targets>
							<target roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.Rule</entity>
							</target>
						</targets>
						<clients>
							<client roleKind="Class">
								<entity>net.sourceforge.pmd.ant.PMDTask</entity>
							</client>
						</clients>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Builder">
			<microArchitectures>
				<microArchitecture number="126">
					<roles>
						<directors>
							<director roleKind="Class">
								<entity>net.sourceforge.pmd.CommandLineOptions</entity>
							</director>
						</directors>
						<builders>
							<builder roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.renderers.Renderer</entity>
							</builder>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.IDEAJRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.EmacsRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.PapariTextRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.SummaryHTMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.VBHTMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.HTMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.XMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.TextRenderer</entity>
							</concreteBuilder>
						</concreteBuilders>
					</roles>
				</microArchitecture>
				<microArchitecture number="127">
					<roles>
						<directors>
							<director roleKind="Class">
								<entity>net.sourceforge.pmd.ant.Formatter</entity>
							</director>
						</directors>
						<builders>
							<builder roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.renderers.CVSRenderer</entity>
							</builder>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.IDEAJRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.EmacsRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.PapariTextRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.SummaryHTMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.VBHTMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.HTMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.XMLRenderer</entity>
							</concreteBuilder>
							<concreteBuilder roleKind="Class">
								<entity>net.sourceforge.pmd.renderers.TextRenderer</entity>
							</concreteBuilder>
						</concreteBuilders>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Composite">
			<microArchitectures>
				<microArchitecture number="128">
					<roles>
						<composites>
							<composite roleKind="Class">
								<entity>net.sourceforge.pmd.TargetJDK1_4</entity>
							</composite>
							<composite roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaCharStream</entity>
							</composite>
						</composites>
						<components>
							<component roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.CharStream</entity>
							</component>
						</components>
						<leaves>
							<leaf roleKind="Class">
								<entity>net.sourceforge.pmd.ast.SimpleStream</entity>
							</leaf>
						</leaves>
						<clients>
							<client roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParser</entity>
							</client>
							<client roleKind="Client">
								<entity>net.sourceforge.pmd.ast.JavaParserTokenManager</entity>
							</client>
						</clients>
					</roles>
				</microArchitecture>
				<microArchitecture number="129">
					<roles>
						<composites>
							<composite roleKind="Class">
								<entity>net.sourceforge.pmd.ast.ASTVariableDeclaratorID</entity>
							</composite>
						</composites>
						<components>
							<component roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.Node</entity>
							</component>
						</components>
						<leaves>
							<leaf roleKind="Class">
								<entity>net.sourceforge.pmd.ast.SimpleStream</entity>
							</leaf>
						</leaves>
					</roles>
				</microArchitecture>			
			</microArchitectures>
		</designPattern>
		<designPattern name="Factory Method">
			<microArchitectures>
				<microArchitecture number="130">
					<roles>
						<creators>
							<creator roleKind="AbstractClass"><entity>net.sourceforge.pmd.symboltable.ScopeFactory</entity></creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class"><entity>net.sourceforge.pmd.symboltable.BasicScopeFactory</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>net.sourceforge.pmd.symboltable.ScopeCreationVisitorTest.MySF</entity></concreteCreator>
						</concreteCreators>
						<products>
							<product roleKind="AbstractClass"><entity>net.sourceforge.pmd.symboltable.Scope</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.ClassScope</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.AbstractScopeTest.IsEnclosingClassScope</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.GlobalScope</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.LocalScope</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.MethodScope</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.AbstractScopeTest.MyScope</entity></concreteProduct>
							<concreteProduct roleKind="Class"><entity>net.sourceforge.pmd.symboltable.GlobalScope</entity></concreteProduct>
						</concreteProducts>
					</roles>
				</microArchitecture>
				<microArchitecture number="131">
					<roles>
						<creators>
							<creator roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.TargetJDKVersion</entity>
							</creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class">
								<entity>net.sourceforge.pmd.TargetJDK1_4</entity>
							</concreteCreator>
						</concreteCreators>
						<products>
							<product roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.JavaParserConstants</entity>
							</product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParser</entity>
							</concreteProduct>
						</concreteProducts>
					</roles>
				</microArchitecture>
				<microArchitecture number="132">
					<roles>
						<creators>
							<creator roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.TargetJDKVersion</entity>
							</creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class">
								<entity>net.sourceforge.pmd.TargetJDK1_4</entity>
							</concreteCreator>
						</concreteCreators>
						<products>
							<product roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.JavaParserConstants</entity>
							</product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParserTokenManager</entity>
							</concreteProduct>
							<concreteProduct roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParser</entity>
							</concreteProduct>
						</concreteProducts>
					</roles>
				</microArchitecture>							
			</microArchitectures>
		</designPattern>
		<!--
		<designPattern name="Interpreter">
			<microArchitectures>
				<microArchitecture number="111">
					<roles>
						<clients>
							<client roleKind="class"><entity>net.sourceforge.pmd.ast.JavaParser</entity></client>
						</clients>
						<contexts>
							<context roleKind="class"><entity>net.sourceforge.pmd.ast.JavaParserState</entity></context>
						</contexts>
						<abstractExpressions>
							<abstractExpression roleKind="abstractClass"><entity>net.sourceforge.pmd.ast.SimpleNode</entity></abstractExpression>
						</abstractExpressions>
						<terminalExpressions>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
							<terminalExpression roleKind="class"><entity></entity></terminalExpression>
						</terminalExpressions>
						<nonTerminalExpressions>
							<nonTerminalExpression roleKind="class"><entity></entity></nonTerminalExpression>
							<nonTerminalExpression roleKind="class"><entity></entity></nonTerminalExpression>
							<nonTerminalExpression roleKind="class"><entity></entity></nonTerminalExpression>
							<nonTerminalExpression roleKind="class"><entity></entity></nonTerminalExpression>
							<nonTerminalExpression roleKind="class"><entity></entity></nonTerminalExpression>
						</nonTerminalExpressions>
					</roles>
					<comment>
						The JavaParser class contains an JavaParserState object which keeps track of all of the
						nodes of the abstract syntax tree and the state of its parsing. JavaParser initiliazes 
						an object callded JavaParserState, which plays the "context" role in the Interpreter pattern.
						Then, the "CompilationUnit()" method of the parser is invoked to debute the parsing operation 
						of the program represented by the abstract syntax tree. Because of the complexity of the
						grammar, the authors of PMD have decided to implement the Visitor pattern as to how to 
						"interpret" the expressions of the AST. Hence, the "visit" method applied upon each node 
						of the tree	is used as the "interpret" method in the pattern. 
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		-->
		<designPattern name="Iterator">
			<microArchitectures>								
				<microArchitecture number="133">
					<roles>
						<iterators>
							<iterator roleKind="AbstractClass">
								<entity>java.lang.Iterator</entity>
							</iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class">
								<entity>net.sourceforge.pmd.jaxen.NodeIterator</entity>
							</concreteIterator>
						</concreteIterators>
						<aggregates>
							<aggregate roleKind="AbstractClass">
								<entity>org.jaxen.DefaultNavigator</entity>
							</aggregate>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class">
								<entity>net.sourceforge.pmd.jaxen.DocumentNavigator</entity>
							</concreteAggregate>
						</concreteAggregates>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Proxy">
			<microArchitectures>
				<microArchitecture number="134">
					<roles>
						<proxies>
							<proxy roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParser</entity>
							</proxy>
						</proxies>
						<subjects>
							<subject roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.JavaParserConstants</entity>
							</subject>
						</subjects>
						<realSubjects>
							<realSubject roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParserTokenManager</entity>
							</realSubject>
						</realSubjects>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Template Method">
			<microArchitectures>
				<microArchitecture number="135">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass">
								<entity>org.apache.tools.ant.Task</entity>
							</abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class">
								<entity>net.sourceforge.pmd.ant.PMDTask</entity>
							</concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Observer">
			<microArchitectures>
				<microArchitecture number="136">
					<roles>
						<subjects>
							<subject roleKind="class"><entity>net.sourceforge.pmd.util.viewer.model.ViewerModel</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="class"><entity>net.sourceforge.pmd.util.viewer.model.ViewerModel</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="abstractClass"><entity>net.sourceforge.pmd.util.viewer.model.ViewerModelListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="class"><entity>net.sourceforge.pmd.util.viewer.gui.ASTPanel</entity></concreteObserver>
							<concreteObserver roleKind="class"><entity>net.sourceforge.pmd.util.viewer.gui.EvaluationResultsPanel</entity></concreteObserver>
							<concreteObserver roleKind="class"><entity>net.sourceforge.pmd.util.viewer.gui.MainFrame</entity></concreteObserver>
							<concreteObserver roleKind="class"><entity>net.sourceforge.pmd.util.viewer.gui.SourceCodePanel</entity></concreteObserver>
							<concreteObserver roleKind="class"><entity>net.sourceforge.pmd.util.viewer.gui.XPathPanel</entity></concreteObserver>
						</concreteObservers>
					</roles>
					<comment>
						There is no interface playing the role of a subject. As a matter of fact, we think ViewerModel is the only
						concrete class from which the observers are listening to, observing its state and updating its data . 
					</comment>
				</microArchitecture>
				<microArchitecture number="137">
					<roles>
						<observers>
							<observer roleKind="abstractClass"><entity>net.sourceforge.pmd.ReportListener</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="class"><entity>test.net.sourceforge.pmd.ReportTest</entity></concreteObserver>
							<concreteObserver roleKind="class"><entity>test.net.sourceforge.pmd.rules.design.UseSingletonRuleTest</entity></concreteObserver>
						</concreteObservers>
						<subjects>
						</subjects>
						<concreteSubjects> 
							<concreteSubject roleKind="class"><entity>net.sourceforge.pmd.Report</entity></concreteSubject>
						</concreteSubjects>
					</roles>
					<comment>
						Il nous manque la classe qui joue le role de subject!
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Visitor">
			<microArchitectures>				
				<microArchitecture number="138">
					<roles>
						<elements>
							<element roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.Node</entity>
							</element>
						</elements>
						<objectStructures>
							<objectStructure roleKind="Class">
								<entity>net.sourceforge.pmd.ast.SimpleNode</entity>
							</objectStructure>
						</objectStructures>
						<concreteElements>
							<concreteElement roleKind="Class">
								<entity>net.sourceforge.pmd.ast.ASTVariableDeclaratorId</entity>
							</concreteElement>
						</concreteElements>
						<visitors>
							<visitor roleKind="AbstractClass">
								<entity>net.sourceforge.pmd.ast.JavaParserVisitor</entity>
							</visitor>
						</visitors>
						<concreteVisitors>
							<concreteVisitor roleKind="Class">
								<entity>net.sourceforge.pmd.ast.JavaParserVisitorAdapter</entity>
							</concreteVisitor>
						</concreteVisitors>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>	

	<!--  Khashayar 11 Jan 2005  **** Start **** -->
	<program type="Java">
		<name>13 - Software architecture design patterns in Java</name>

		<designPattern name="Factory Method">
			<microArchitectures>
				<microArchitecture number="139">
					<roles>
						<products>
							<product roleKind="AbstractClass"><entity>src.FactoryMethod.After.ConsoleLogger</entity></product>
						</products>
						<concreteProducts>
							<concreteProduct roleKind="Class"><entity>src.FactoryMethod.After.FileLogger</entity></concreteProduct>
						</concreteProducts>
						<creators>
							<creator roleKind="AbstractClass"><entity>src.FactoryMethod.After.LoggerFactory</entity></creator>
						</creators>
						<concreteCreators>
							<concreteCreator roleKind="Class"><entity>src.FactoryMethod.After.LoggerTest</entity></concreteCreator>
						</concreteCreators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Abstract Factory">
			<microArchitectures>
				<microArchitecture number="140">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>src.AbstractFactory.AutoSearchUI</entity></client>
						</clients>
						<abstractFactories>
							<abstractFactory roleKind="AbstractClass"><entity>src.AbstractFactory.VehicleFactory</entity></abstractFactory>
						</abstractFactories>
						<concreteFactories>
							<concreteFactory roleKind="Class"><entity>src.AbstractFactory.LuxuryVehicleFactory</entity></concreteFactory>
							<concreteFactory roleKind="Class"><entity>src.AbstractFactory.NonLuxuryVehicleFactory</entity></concreteFactory>
						</concreteFactories>
						<abstractProducts>
							<abstractProduct roleKind="AbstractClass"><entity>src.AbstractFactory.SUV</entity></abstractProduct>
							<abstractProduct roleKind="AbstractClass"><entity>src.AbstractFactory.Car</entity></abstractProduct>
						</abstractProducts>
						<products>
							<product roleKind ="Class"><entity>src.AbstractFactory.LuxuryCar</entity></product>
							<product roleKind ="Class"><entity>src.AbstractFactory.LuxurySUV</entity></product>
							<product roleKind ="Class"><entity>src.AbstractFactory.NonLuxuryCar</entity></product>
							<product roleKind ="Class"><entity>src.AbstractFactory.NonLuxurySUV</entity></product>
						</products>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Prototype">
			<microArchitectures>
				<microArchitecture number="141">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>src.PROTOTYPE.AccountPrototypeFactory</entity></client>
						</clients>
						<prototypes>
							<prototype roleKind="AbstractClass"><entity>src.PROTOTYPE.Permission</entity></prototype>
						</prototypes>
						<concretePrototypes>
							<concretePrototype roleKind="Class"><entity>src.PROTOTYPE.UserAccount</entity></concretePrototype>
						</concretePrototypes>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Builder">
			<microArchitectures>
				<microArchitecture number="142">
					<roles>
						<directors>
							<director roleKind="Class"><entity>src.BUILDER.UIDirector</entity></director>
						</directors>
						<builders>
							<builder roleKind="AbstractClass"><entity>src.BUILDER.HIBuilder</entity></builder>
						</builders>
						<concreteBuilders>
							<concreteBuilder roleKind="Class"><entity>src.BUILDER.EmpSrchBuilder</entity></concreteBuilder>
							<concreteBuilder roleKind="Class"><entity>src.BUILDER.CandSrchBuilder</entity></concreteBuilder>
						</concreteBuilders>
						<products>
							<product roleKind="Class"><entity>src.BUILDER.SearchManager</entity></product>
						</products>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		
		<designPattern name="Composite">
			<microArchitectures>
				<microArchitecture number="143">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>src.COMPOSITE.CompositeDemo</entity></client>
						</clients>
						<components>
							<component roleKind="AbstractClass"><entity>src.COMPOSITE.FileSystemComponent</entity></component>
						</components>
						<composites>
							<composite roleKind="Class"><entity>src.COMPOSITE.CompositeException</entity></composite>
						</composites>
						<leaves>
							<leaf roleKind="Class"><entity>src.COMPOSITE.FileComponent</entity></leaf>
							<leaf roleKind="Class"><entity>src.COMPOSITE.DirComponent</entity></leaf>
						</leaves>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Visitor">
			<microArchitectures>
				<microArchitecture number="144">
					<roles>
						<visitors>
							<visitor roleKind="AbstractClass"><entity>src.VISITOR.OrderVisitor</entity></visitor>
						</visitors>
						<concreteVisitors>
							<concreteVisitor roleKind="Class"><entity>src.VISITOR.CaliforniaOrder</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>src.VISITOR.NonCaliforniaOrder</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>src.VISITOR.OverseasOrder</entity></concreteVisitor>
						</concreteVisitors>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Iterator">
			<microArchitectures>
				<microArchitecture number="145">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>src.ITERATOR.Internal.SearchManager</entity></client>
						</clients>
						<aggregates>
						</aggregates>
						<concreteAggregates>
							<concreteAggregate roleKind="Class"><entity>src.ITERATOR.Internal.AllCandidates</entity></concreteAggregate>
						</concreteAggregates>
						<iterators>
							<iterator roleKind="AbstractClass"><entity>src.ITERATOR.External.CertifiedCandidates</entity></iterator>
						</iterators>
						<concreteIterators>
							<concreteIterator roleKind="Class"><entity>src.ITERATOR.External.AllCandidates</entity></concreteIterator>
						</concreteIterators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Flyweight">
			<microArchitectures>
				<microArchitecture number="146">
					<roles>
						<flyweightfactories>
							<flyweightfactory roleKind="Class"><entity>src.FLYWEIGHT.Approach1.FlyweightFactory</entity></flyweightfactory>
						</flyweightfactories>
						<flyweights>
							<flyweight roleKind="Class"><entity>src.FLYWEIGHT.Approach1.VCard</entity></flyweight>
						</flyweights>
						<concreteFlyweights>
							<concreteFlyweight roleKind="Class"><entity>src.FLYWEIGHT.Approach1.FlyweightTest</entity></concreteFlyweight>
						</concreteFlyweights>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	
		<designPattern name="Decorator">
			<microArchitectures>
				<microArchitecture number="147">
					<roles>
						<components>
							<component roleKind="AbstractClass"><entity>src.DECORATOR.LoggerFactory</entity></component>
						</components>
						<concreteComponents>
							<concreteComponent roleKind="Class"><entity>src.DECORATOR.FileLogger</entity></concreteComponent>
						</concreteComponents>
						<decorators>
							<decorator roleKind="Class"><entity>src.DECORATOR.LoggerDecorator</entity></decorator>
						</decorators>
						<concreteDecorators>
							<concreteDecorator roleKind="Class"><entity>src.DECORATOR.EncryptLogger</entity></concreteDecorator>
							<concreteDecorator roleKind="Class"><entity>src.DECORATOR.HTMLLogger</entity></concreteDecorator>
						</concreteDecorators>
						<clients>
							<client roleKind="Class"><entity>src.DECORATOR.DecoratorClient</entity></client>
						</clients>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Adapter">
			<microArchitectures>
				<microArchitecture number="148">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>src.ADAPTER.obj.Customer</entity></client>
						</clients>
						<targets>
							<target roleKind="AbstractClass"><entity>src.ADAPTER.obj.CAAddress</entity></target>
						</targets>
						<adapters>
							<adapter roleKind="Class"><entity>src.ADAPTER.obj.CAAddressAdapter</entity></adapter>
						</adapters>
						<adaptees>
							<adaptee roleKind="Class"><entity>src.ADAPTER.obj.AddressManager</entity></adaptee>
							<adaptee roleKind="Class"><entity>src.ADAPTER.obj.AddressValidator</entity></adaptee>
						</adaptees>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Chain of Responsibility">
			<microArchitectures>
				<microArchitecture number="149">
					<roles>
						<clients>
							<client roleKind="AbstractClass"><entity>src.ChainOfResponsability.PRManager</entity></client>
						</clients>
						<handler>
							<handler roleKind="AbstractClass"><entity>src.ChainOfResponsability.PRHandler</entity></handler>
						</handler>
						<concretehandler>
							<concretehandler roleKind="Class"><entity>src.ChainOfResponsability.RegionalDirector</entity></concretehandler>
							<concretehandler roleKind="Class"><entity>src.ChainOfResponsability.VicePresident</entity></concretehandler>
							<concretehandler roleKind="Class"><entity>src.ChainOfResponsability.BranchManager</entity></concretehandler>
							<concretehandler roleKind="Class"><entity>src.ChainOfResponsability.PresidentCOO</entity></concretehandler>
						</concretehandler>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		 <designPattern name="Facade">
		 	<microArchitectures>
				<microArchitecture number="150">
		 			<roles>
		 				<facades>
		 					<facade roleKind="Class"><entity>src.FAÇADE.server.CustomerFacade</entity></facade>
		 				</facades>
						<subsystemClasses>
							<subsystemClass roleKind="Class"><entity>src.FAÇADE.server.Account</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>src.FAÇADE.server.Address</entity></subsystemClass>
							<subsystemClass roleKind="Class"><entity>src.FAÇADE.server.CreditCard</entity></subsystemClass>
						</subsystemClasses>
		 			</roles>
				</microArchitecture>
		 	</microArchitectures>
		 </designPattern>

		<designPattern name="Bridge">
			<microArchitectures>
				<microArchitecture number="151">
					<roles>
						<abstractions>
							<abstraction roleKind="AbstractClass"><entity>src.BRIDGE.FileLoger</entity></abstraction>
						</abstractions>
						<refinedAbstractions>
							<refinedAbstraction roleKind="Class"><entity>src.BRIDGE.ConsoleLogger</entity></refinedAbstraction>
							<refinedAbstraction roleKind="Class"><entity>src.BRIDGE.FileLogger</entity></refinedAbstraction>
						</refinedAbstractions>
						<implementors>
							<implementor roleKind="AbstractClass"><entity>src.BRIDGE.EncreyptedMessage</entity></implementor>
						</implementors>
						<concreteImplementors>
							<concreteImplementor roleKind="Class"><entity>src.BRIDGE.TextMessage</entity></concreteImplementor>
						</concreteImplementors>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<!--
		<designPattern name="Mediator">
			<microArchitectures>
				<microArchitecture number="152">
					<roles>
						<mediator>
							<mediator roleKind="AbstractClass"><entity>src.MEDIATOR.mediator</entity></mediator>
						</mediator>
						<concretemediator>
							<concretemediator roleKind="Class"><entity>src.MEDIATOR.listHandler</entity></concretemediator>
							<concretemediator roleKind="Class"><entity>src.MEDIATOR.buttonHandler</entity></concretemediator>
						</concretemediator>
						<colleagueclasses>
							<colleagueclasses roleKind="Class"><entity>src.MEDIATOR.DeleteButton</entity></colleagueclasses>
							<colleagueclasses roleKind="Class"><entity>src.MEDIATOR.DownloadButton</entity></colleagueclasses>
							<colleagueclasses roleKind="Class"><entity>src.MEDIATOR.UploadButton</entity></colleagueclasses>
							<colleagueclasses roleKind="Class"><entity>src.MEDIATOR.LocalList</entity></colleagueclasses>
							<colleagueclasses roleKind="Class"><entity>src.MEDIATOR.RemoteList</entity></colleagueclasses>
						</colleagueclasses>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		-->

		<designPattern name="Mediator">
			<microArchitectures>
				<microArchitecture number="152">
					<roles>
						<mediator>
							<mediator roleKind="AbstractClass"><entity>src.MEDIATOR.FTPGUI</entity></mediator>
						</mediator>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		
		<designPattern name="Template Method">
			<microArchitectures>
				<microArchitecture number="153">
					<roles>
						<abstractClasses>
							<abstractClass roleKind="AbstractClass"><entity>src.TemplateMethod.CreditCard</entity></abstractClass>
						</abstractClasses>
						<concreteClasses>
							<concreteClass roleKind="Class"><entity>src.TemplateMethod.DinerCard</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>src.TemplateMethod.MaserCard</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>src.TemplateMethod.VisaCard</entity></concreteClass>
						</concreteClasses>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Strategy">
			<microArchitectures>
				<microArchitecture number="154">
					<roles>
						<strategies>
							<strategy roleKind="AbstractClass"><entity>src.STRATEGY.EncryptionStrategy</entity></strategy>
						</strategies>
						<contexts>
							<context roleKind="Class"><entity>src.STRATEGY.FileLogger</entity></context>
							<context roleKind="Class"><entity>src.STRATEGY.EncryptLogger</entity></context>
							<context roleKind="Class"><entity>src.STRATEGY.LoggerClient</entity></context>
						</contexts>
						<concreteStrategies>
							<concreteStrategy roleKind="Class"><entity>src.STRATEGY.SubstitutionCypher</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>src.STRATEGY.SimpleEncryption</entity></concreteStrategy>
							<concreteStrategy roleKind="Class"><entity>src.STRATEGY.CaesarCypher</entity></concreteStrategy>
						</concreteStrategies>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="State">
			<microArchitectures>
				<microArchitecture number="155">
					<roles>
						<contexts>
							<context roleKind="Class"><entity>src.STATE.AccountManager</entity></context>
						</contexts>
						<states>
							<state roleKind="AbstractClass"><entity>src.STATE.State</entity></state>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>src.STATE.TransactionFreeState</entity></concreteState>
							<concreteState roleKind="Class"><entity>src.STATE.NoTransactionFreeState</entity></concreteState>
							<concreteState roleKind="Class"><entity>src.STATE.OverDrawnState</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Interpreter">
			<microArchitectures>
				<microArchitecture number="156">
					<roles>
						<clients>
							<client roleKind="class"><entity>src.INTERPRETER.Calculator</entity></client>
						</clients>
						<contexts>
							<context roleKind="class"><entity>src.INTERPRETER.Context</entity></context>
						</contexts>
						<abstractExpressions>
							<abstractExpression roleKind="abstractClass"><entity>src.INTERPRETER.Expression</entity></abstractExpression>
						</abstractExpressions>
						<terminalExpressions>
							<terminalExpression roleKind="class"><entity>src.INTERPRETER.TerminalExpression</entity></terminalExpression>
						</terminalExpressions>
						<nonTerminalExpressions>
							<nonTerminalExpression roleKind="class"><entity>src.INTERPRETER.NonterminalExpression</entity></nonTerminalExpression>
						</nonTerminalExpressions>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Observer">
			<microArchitectures>
				<microArchitecture number="157">
					<roles>
						<subjects>
							<subject roleKind="AbstractClass"><entity>src.OBSERVER.MonthlyReport</entity></subject>
						</subjects>
						<concreteSubjects>
							<concreteSubject roleKind="Class"><entity>src.OBSERVER.ReportManager</entity></concreteSubject>
							<concreteSubject roleKind="Class"><entity>src.OBSERVER.SupervisorView</entity></concreteSubject>
						</concreteSubjects>
						<observers>
							<observer roleKind="AbstractClass"><entity>src.OBSERVER.Observer</entity></observer>
						</observers>
						<concreteObservers>
							<concreteObserver roleKind="Class"><entity>src.OBSERVER.YTDChart</entity></concreteObserver>
						</concreteObservers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		
		<designPattern name="Singleton">
			<microArchitectures>
				<microArchitecture number="158">
					<roles>
						<singletons>
							<singleton roleKind="Class"><entity>src.SINGLETON.FileLogger</entity></singleton>
						</singletons>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Proxy">
			<microArchitectures>
				<microArchitecture number="159">
					<roles>
						<proxies>
							<proxy roleKind="Class">
								<entity>src.PROXY.server.CustomerFacade</entity>
							</proxy>
						</proxies>
						<subjects>
							<subject roleKind="AbstractClass">
								<entity>src.PROXY.server.CustomerIntr</entity>
							</subject>
						</subjects>
						<realSubjects>
							<realSubject roleKind="Class">
								<entity>src.PROXY.server.CreditCard</entity>
							</realSubject>
							<realSubject roleKind="Class">
								<entity>src.PROXY.server.Address</entity>
							</realSubject>
							<realSubject roleKind="Class">
								<entity>src.PROXY.server.Account</entity>
							</realSubject>
						</realSubjects>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<!--
		<designPattern name="Command">
			<microArchitectures>
				<microArchitecture number="160">
					<roles>
						<clients>
						</clients>
						<invokers>
						</invokers>
						<commands>
							<command roleKind="Class">src.COMMAND.GUI.after.CommandInterface<entity></entity></command>
						</commands>
						<concreteCommands>
							<concreteCommand roleKind="Class"><entity>src.COMMAND.GUI.after.ExitButton</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>src.COMMAND.GUI.after.UploadButton</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>src.COMMAND.GUI.after.DeleteButton</entity></concreteCommand>
							<concreteCommand roleKind="Class"><entity>src.COMMAND.GUI.after.DownloadButton</entity></concreteCommand>
						</concreteCommands>
						<receivers>
							<receivers roleKind="Class"><entity>src.COMMAND.GUI.after.buttonHandler</entity></receivers>
						</receivers>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		-->

		<designPattern name="Command">
			<microArchitectures>
				<microArchitecture number="160">
					<roles>
						<clients>
						</clients>
						<invokers>
						</invokers>
						<commands>
							<command roleKind="Class"><entity>src.COMMAND.GUI.after.FTPGUI</entity></command>
						</commands>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>

		<designPattern name="Memento">
			<microArchitectures>
				<microArchitecture number="161">
					<roles>
						<mementos>
							<memento roleKind="Class">
								<entity>src.MEMENTO.MementoHandler</entity>
							</memento>
						</mementos>
						<originators>
							<originator roleKind="Class">
								<entity>src.MEMENTO.DataConverter</entity>
							</originator>
						</originators>
						<caretakers>
							<caretaker roleKind="Class">
								<entity>java.io.Serializable</entity>
							</caretaker>
						</caretakers>
					</roles>
					<comment>
						Java.io.Serializable is correct.
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>
	<!--  Khashayar 11 Jan 2005  **** End **** -->

	<!--
	<program type="Java">
		<name>Design Pattern Group</name>
		<designPattern name="Flyweight">
			<microArchitectures>
				<="138">
				<reference>Azureus_Flyweight_01</reference>
					<roles>
						<flyweights>
							<flyweight roleKind="AbstractClass"><entity>org.bouncycastle.crypto.BlockCipher</entity></flyweight>
						</flyweights>
						<concreteFlyweights>
							<concreteFlyweight roleKind="Class"><entity>org.bouncycastle.crypto.modes.CFBBlockCipher</entity></concreteFlyweight>
						</concreteFlyweights>
						<unsharedConcreteFlyweights>
							<unsharedConcreteFlyweight roleKind="Class"><entity>org.bouncycastle.crypto.modes.OFBBlockCipher</entity></unsharedConcreteFlyweight>
							<unsharedConcreteFlyweight roleKind="Class"><entity>org.bouncycastle.crypto.modes.CBCBlockCipher</entity></unsharedConcreteFlyweight>
							<unsharedConcreteFlyweight roleKind="Class"><entity>org.bouncycastle.crypto.modes.SICBlocCipher</entity></unsharedConcreteFlyweight>
							<unsharedConcreteFlyweight roleKind="Class"><entity>org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher</entity></unsharedConcreteFlyweight>
							<unsharedConcreteFlyweight roleKind="Class"><entity>org.bouncycastle.crypto.modes.PGPCFBBlockCipher</entity></unsharedConcreteFlyweight>
						</unsharedConcreteFlyweights>
						<flyweightFactories>
							<flyweightFactory roleKind="Class"><entity>org.bouncycastle.crypto.BufferedBlockCipher</entity></flyweightFactory>
						</Factories>
						<clients>
							<client roleKind="Class"><entity>org.bouncycastle.crypto.modes.CTSBlockCipher</entity></client>
						</clients>
					</roles>
					<comment>
						Ici toutes les classes du "Flyweight Pool" se trouve dans le meme package !
						Le "Flyweight" et le "FlyweightFactory" se trouvent dans un package de niveau plus elever. Cela nous fait penser que le "Flyweight Pool" serait une sorte de sous systeme,
						en analogie avec la "Facade".
					</comment>
				</microArchitecture>
			</microArchitectures>
			<comment>
				Patron rare.
				Ce patron nous permet de definir en parallele des etats differants fonctionnant conjointement tout au long du programme.
			</comment>
		</designPattern>
		<designPattern name="Interpreter">
			<microArchitectures>
				<microArchitecture number="139">
				<reference>Azureus_Interpreter_01</reference>
					<roles>
						<abstractExpressions>
							<abstractExpression roleKind="AbstractClass"><entity>org.bouncycastle.crypto.BlockCipher</entity></abstractExpression>
						</abstractExpressions>
						<terminalExpressions>
							<terminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.CFBBlockCipher</entity></terminalExpression>
						</terminalExpressions>
						<nonterminalExpressions>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.OFBBlocCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.CBCBlocCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.SICBlocCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.PGPCFBBlockCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.OpenPGPCFBBlocCipher</entity></nonterminalExpression>
						</nonterminalExpressions>
						<contexts>
							<context roleKind="Class"><entity>org.bouncycastle.crypto.CipherParameters</entity></context>
						</contexts>
						<clients>
							<client roleKind="Class"><entity>org.bouncycastle.crypto.BufferedBlockCipher</entity></client>
						</clients>
					</roles>
				</microArchitecture>
				<microArchitecture number="140">
				<reference>Azureus_Interpreter_02</reference>
					<roles>
						<abstractExpressions>
							<abstractExpression roleKind="AbstractClass"><entity>org.bouncycastle.crypto.BlockCipher</entity></abstractExpression>
						</abstractExpressions>
						<terminalExpressions>
							<terminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.CFBBlockCipher</entity></terminalExpression>
						</terminalExpressions>
						<nonterminalExpressions>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.OFBBlocCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.CBCBlocCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.SICBlocCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.PGPCFBBlockCipher</entity></nonterminalExpression>
							<nonterminalExpression roleKind="Class"><entity>org.bouncycastle.crypto.modes.OpenPGPCFBBlocCipher</entity></nonterminalExpression>
						</nonterminalExpressions>
						<contexts>
							<context roleKind="Class"><entity>org.bouncycastle.crypto.CipherParameters</entity></context>
						</contexts>
						<clients>
							<client roleKind="Class"><entity>org.bouncycastle.crypto.BufferedBlockCipher</entity></client>
						</clients>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Visitor">
			<microArchitectures>
				<microArchitecture number="141">
				<reference>Azureus_Visitor_01</reference>
					<roles>
						<visitors>
							<visitor roleKind="AbstractClass"><entity>org.bouncycastle.crypto.CipherParameters</entity></visitor>
						</visitors>
						<concreteVisitors>
							<concreteVisitor roleKind="Class"><entity>org.bouncycastle.crypto.params.ParametersWithRandom</entity></concreteVisitor>
							<concreteVisitor roleKind="Class"><entity>org.bouncycastle.crypto.params.ParametersWithIV</entity></concreteVisitor>
						</concreteVisitors>
						<elements>
							<element roleKind="AbstractClass"><entity>org.bouncycastle.crypto.BlockCipher</entity></element>
						</elements>
						<concreteElements>
							<concreteElement roleKind="Class"><entity>org.bouncycastle.crypto.modes.OFBBlockCipher</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.bouncycastle.crypto.modes.CBCBlockCipher</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.bouncycastle.crypto.modes.SICBlocCipher</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.bouncycastle.crypto.modes.PGPCFBBlockCipher</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher</entity></concreteElement>
							<concreteElement roleKind="Class"><entity>org.bouncycastle.crypto.modes.CFBBlockCipher</entity></concreteElement>
						</concreteElements>
						<objectStructures>
							<objectStructure roleKind="Class"><entity>org.bouncycastle.crypto.BufferedBlockCipher</entity></objectStructure>
						</objectStructures>
					</roles>
					<comment>
						En prenant le livre "Design Pattern" comme reference, le "Client" n'est pas un participant assez important pour etre precise.
						Mais nous pensons que, comme ici, nous devons preciser que le "Client" peut faire qu'un avec le "ObjectStructure".
						En fait, au cours de notre recherche, nous avons trouve que c'est souvent le cas.
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="State">
			<microArchitectures>
				<microArchitecture number="142">
				<reference>Azureus_State_01</reference>
					<roles>
						<contexts>
							<context roleKind="Class"><entity>org.bouncycastle.crypto.encodings.PKCS1Encoding</entity></context>
							<context roleKind="Class"><entity>org.bouncycastle.crypto.encodings.OAEPEncoding</entity></context>
						</contexts>
						<states>
							<state roleKind="AbstractClass"><entity>org.bouncycastle.crypto.params.AsymmetricKeyParameter</entity></state>
						</states>
						<concreteStates>
							<concreteState roleKind="Class"><entity>org.bouncycastle.crypto.params.DSAPublicKeyParameters</entity></concreteState>
							<concreteState roleKind="Class"><entity>org.bouncycastle.crypto.params.DSAPrivateKeyParameters</entity></concreteState>
						</concreteStates>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Factory Method">
			<microArchitectures>
				<microArchitecture number="143">
				<reference>Azureus_FactoryMethod_TemplateMethod_01</reference>
					<roles>
						<products>
							<product roleKind="AbstractClass"><entity>org.bouncycastle.crypto.CipherParameters</entity></product>
						</products>
						<concretesProducts>
							<creator roleKind="AbstractClass"><entity>org.bouncycastle.crypto.params.KeyParameter</entity></creator>
						</concretesProducts>
						<creators>
							<concreteProduct roleKind="Class"><entity>org.bouncycastle.crypto.PBEParametersGenerator</entity></concreteProduct>
						</creators>
						<concretesCreators>
							<concreteCreator roleKind="Class"><entity>org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator</entity></concreteCreator>
							<concreteCreator roleKind="Class"><entity>org.bouncycastle.crypto.generators.PKCS12ParametersGenerator</entity></concreteCreator>
						</concretesCreators>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Template Method">
			<microArchitectures>
				<microArchitecture number="144">
				<reference>Azureus_FactoryMethod_TemplateMethod_01</reference>
					<roles>
						<abstractsClasses>
							<abstractClass roleKind="AbstractClass"><entity>org.bouncycastle.crypto.PBEParametersGenerator</entity></abstractClass>
						</abstractsClasses>
						<concretesClasses>
							<concreteClass roleKind="Class"><entity>org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator</entity></concreteClass>
							<concreteClass roleKind="Class"><entity>org.bouncycastle.crypto.generators.PKCS12ParametersGenerator</entity></concreteClass>
						</concretesClasses>
					</roles>
					<comment>
						Ici, rien de spÃ©cial, Ã  moins que l'on jette un coup d'oeil sur le magnifique Diagramme "Azureus_FactoryMethod_TemplateMethod_01".
						On remarque donc un bel example de Factory Method dÃ©rivÃ© d'un Template Method
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
		<designPattern name="Bridge">
			<microArchitectures>
				<microArchitecture number="145">
				<reference>Azureus_Bridge_01</reference>
					<roles>
						<abstractions>
							<abstraction roleKind="Class"><entity>org.bouncycastle.crypto.CipherKeyGenerator</entity></abstraction>
						</abstractions>
						<refinedAbstractions>
							<refinedAbstraction roleKind="Class"><entity>org.bouncycastle.crypto.generators.DESKeyGenerator</entity></refinedAbstraction>
						</refinedAbstractions>
						<implementors>
							<implementor roleKind="AbstractClass"><entity>org.bouncycastle.crypto.KeyGenerationParameters</entity></implementor>
						</implementors>
						<concretesImplementors>
							<concreteImplementor roleKind="Class"><entity>org.bouncycastle.crypto.params.RSAKeyGenerationParameters</entity></concreteImplementor>
							<concreteImplementor roleKind="Class"><entity>org.bouncycastle.crypto.params.ECKeyGenerationParameters</entity></concreteImplementor>
							<concreteImplementor roleKind="Class"><entity>org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters</entity></concreteImplementor>
							<concreteImplementor roleKind="Class"><entity>org.bouncycastle.crypto.params.DSAKeyGenerationParameters</entity></concreteImplementor>
							<concreteImplementor roleKind="Class"><entity>org.bouncycastle.crypto.params.DHKeyGenerationParameters</entity></concreteImplementor>
						</concretesImplementors>
					</roles>
					<comment>
						Ici, ni l'objet "Abstraction", ni l'objet "Implementor" ne sont des interfaces, comme propose le GoF
						La raison pour lequelle nous pensons Ãªtre en prÃ©sence d'un bridge, c'est par la motivation.
						En fait, nous supposons que la volontÃ© du programmeur est de creer une class "DESKeyGenerator", dont le but est de gÃ©nÃ©rer des clÃ©es,
						pouvant s'adapter et surtout interchanger des jeux de parametres de clees different. Dans ce but, l'esprit du "Bridge" Ã  Ã©tÃ© respectÃ©.
						Pourquoi nous pensons, ici, que avoir des "Class" au lieu de "AbstractClass" n'est pas si important, c'est que une interface nous oblige
						Ã  avoir une certaine structure dans les class enfants. Mais en regardant de plus prÃ¨s le code source, nous constatons que toutes les "ConcreteImplementor"
						possÃ¨dent une structure plus ou moins identique. Donc suivent la mÃªme "ligne" de programmation.
						En conclusion, nous sommes bien en prÃ©sence d'un bridge, mais l'utilisation de "Class" au lieu de "AbstractClass" ne nous garantis pas que toutes les
						enfants des Objets "Abstraction" et "Implementor" constitue des Ã©lÃ©ments du Bridge.
					</comment>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>
	-->

	<program>
		<name>14 - DrJava v20020619</name>
		<designPattern name="Proxy">
	    	<microArchitectures>
	        	<microArchitecture number="400">
	         		<actors>
	                	<clients>
	                    	<client roleKind="Class"><entity>edu.rice.cs.drjava.model.compiler.CompilerRegistry</entity></client>
	                    </clients>
	                    <proxies>
	                         <proxy rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.CompilerProxy</entity></proxy>
						</proxies>
						<subjects>
							<subject rolekind="AbstractClass"><entity>edu.rice.cs.drjava.model.compiler.CompilerInterface</entity></subject>
						</subjects>
						<realSubjects>
							<realSubject rolekind="AbstractClass"><entity>edu.rice.cs.drjava.model.compiler.CompilerInterface</entity></realSubject>
						</realSubjects>
	       			</actors>
	    			<comments>
	     			CompilerProxy appelle le subject CompilerInterface par la methode compile.C'est pour cela qu'on pense que le Subject et le RealSubject sont les memes. 
	   				</comments>
	        	</microArchitecture>
	    	</microArchitectures>
	    </designPattern>	
		<designPattern name="Iterator"> 
	           <microArchitectures> 
	                   <microArchitecture number="401"> 
	                           <actors> 
	                                <clients> 
	                                     <client roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelComment</entity></client> 
	                                </clients> 
	
	                                <iterators> 
	                                     <iterator rolekind="Class|AbstractClass"><entity></entity></iterator> 
	                                </iterators> 
	           						<concreteIterators> 
	                                     <concreteIterator rolekind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Iterator</entity></concreteIterator> 
	                                </concreteIterators> 
	           						<aggregates> 
	                                     <aggregate rolekind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ModelList</entity></aggregate> 
	                                </aggregates> 
	          						 <concreteAggregates> 
	                                     <concreteAggregate rolekind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.TokenList</entity></concreteAggregate> 
	                                </concreteAggregates> 
	             				</actors> 
	         					<comments> 
	      						Nous avons pas l'iterator, mais nous avons la classe ReducedModelComment qui cree un Iterator a travers la classe TokenList (ConcreteAgregate)
	        					</comments> 
	                  </microArchitecture> 
	              </microArchitectures> 
	     </designPattern> 
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="402">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.definition.indent.Identer</entity></singleton>
										</singletons>
										</actors>
	    								<comments>
	      								</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	   	</designPattern>
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="403">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.javacFromClasspath</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="404">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.GJv6FromClasspath</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="405">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.GJv6Compiler</entity></singleton>
										</singletons>
	
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="406">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.JSR14FromSetLocation</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="407">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.JavacFromSetLocation</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="408">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.CompilerRegistry</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="409">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.JavacFromToolsJar</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
			<designPattern name="Visitor">
	         	<microArchitectures>
	                 	<microArchitecture number="410">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.DynamicJavaAdapter.InterpreterExtension</entity></client>
	                             		</clients>
							<visitors>
	                             			<visitor roleKind="AbstractClass"><entity>koala.dynamicjava.tree.visitor.Visitor</entity></visitor>
	                             		</visitors>
										<concreteVisitors>
											<concreteVisitor roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.EvaluationVisitorExtension</entity></concreteVisitor>
											<concreteVisitor roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.NameVisitorExtension</entity></concreteVisitor>
										</concreteVisitors>
										<elements>
	                             			<element roleKind="AbstractClass"><entity>koala.dynamicjava.tree.Node</entity></element>
	                             		</elements>
										<concreteElements>
	                             			<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.ConstructorDeclaration</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.ArrayInitializer</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.CompileTimeQualifiedName</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.BitAndExpression</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.AddExpression</entity></concreteElement>
										</concreteElements>
										<objectStructures>
											<objectStructure roleKind="AbstractClass"><entity>koala.dynamicjava.parser.wrapper.SourceCodeParser</entity></objectStructure>
	                             		</objectStructures>
	                             
	     							</actors>
	    							<comments>
	     							Ce patron de conception est interessant car il utilise des classes qui se trouvent dans d'autres packages qui n'ont pas ete cree par l'equipes de 
									DrJava. A travers la classe DynamicJavaAdapter des liens entre des classes qui n'ont rien en commun est possible notament celles de DrJava avec Koala.
									Il y a beaucoup plus de concreteElements environ une vingtaine.
	   								</comments>
	        	</microArchitecture>
	    	</microArchitectures>
	    </designPattern>	
		<designPattern name="Adapter">
	         	<microArchitectures>
	                 	<microArchitecture number="411">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.JavaInterpreterTest</entity></client>
	                             		</clients>
	                             		
	                                        <target roleKind="AbstractClass"><entity>edu.rice.cs.drjava.model.repl.JavaInterpreter</entity></target>
						
	                             		<adaptee roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.InterpreterExtension</entity></adaptee>
						
	                             		<adapter roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.DynamicJavaAdapter</entity></adapter>					                             		
	       				 		</actors>
	    						<comments>
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
    	</designPattern>
		<designPattern name="Command">
	         	<microArchitectures>
	                 	<microArchitecture number="412">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.DefaultGlobalModel</entity></client>
	                             		</clients>
	                             		<commands>
	                                  		<command roleKind="AbstractClass"><entity>edu.rice.cs.drjava.model.FileOpenSelector</entity></command>
											
	                             		</commands>
	     								<concreteCommands>
	                                  		<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.FileSelector</entity></concreteCommand>
											<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.CancellingSelector</entity></concreteCommand>
											<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.WarningFileSelector</entity></concreteCommand>
	                             		</concreteCommands>
	     								<invokers>
	                                  		<invoker roleKind="Class"><entity>edu.rice.cs.drjava.DrJava</entity></invoker>
											<invoker roleKind="Class"><entity>edu.rice.cs.drjava.model.GlobalModelIOTest</entity></invoker>
											<invoker roleKind="Class"><entity>edu.rice.cs.drjava.model.DefaultGlobalModel</entity></invoker>
											<invoker roleKind="Class"><entity>edu.rice.cs.drjava.ui.MainFrame</entity></invoker>
	                             		</invokers>
	     								<receivers>
	                                  		<receiver roleKind="Class"><entity>java.io.File</entity></receiver>
	                             		</receivers>
	       				 </actors>
    				<comments>
	   				</comments>
               		</microArchitecture>
            	</microArchitectures>
	    	</designPattern>
			<designPattern name="Memento">
	         	<microArchitectures>
	                 	<microArchitecture number="413">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class|AbstractClass"><entity></entity></client>
	                             		</clients>
	                             		<mementos>
	                                  		<memento roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.HighlightStatus</entity></memento>
	                             		</mementos>
	     								<originators>
	                                  		<originator roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></originator>
	                             		</originators>
	     								<caretakers>
	                                  	<caretaker roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></caretaker>
	                             		</caretakers>
	       				 </actors>
	    				<comments>
	     						DefinitionsDocument joue le role de caretaker et de originator. En effet c'est un blob qui regroupe beaucoup de classes et de methodes.
								Client non precise.
						</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>
			<designPattern name="Strategy">
	         	<microArchitectures>
	                 	<microArchitecture number="414">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class|AbstractClass"><entity></entity></client>
	                             		</clients>
	                             		<contexts>
	                                  		<context roleKind="Class"><entity>edu.rice.cs.drjava.config.OptionMapLoader</entity></context>
										</contexts>
										<strategies>
	                             			<strategy roleKind="AbstractClass"><entity>edu.rice.cs.drjava.config.FormatStrategy</entity></strategy>
											<strategy roleKind="AbstractClass"><entity>edu.rice.cs.drjava.config.ParseStrategy</entity></strategy>
										</strategies>
										<concreteStrategies>
	                             			<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.StringOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.BooleanOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.ColorOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.FileOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.IntegerOption</entity></concreteStrategy>
										</concreteStrategies>
	     						</actors>
	    						<comments>
								Il n'y a pas de client
	   							</comments>
	               		</microArchitecture>
	          	</microArchitectures>
	   </designPattern>		
		<designPattern name="Command">
	         	<microArchitectures>
	                 	<microArchitecture number="415">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></client>
	                             		</clients>
	                             		<commands>
	                                  		<command roleKind="AbstractClass"><entity>javax.swing.undo.AbstractUndoableEdit</entity></command>
											
	                             		</commands>
	     								<concreteCommands>
	                                  		<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.CommandUndoableEdit</entity></concreteCommand>
	                             		</concreteCommands>
	     								<invokers>
	                                  		<invoker roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></invoker>
	                             		</invokers>
	     								<receivers>
	                                  		<receiver roleKind="AbstractClass"><entity>java.lang.Runnable</entity></receiver>
	                             		</receivers>
	       				 </actors>
	    				<comments>
	     				DefinitionsDocument joue le role de Invoker et de client .
	   				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
		<designPattern name="Adapter">
	         	<microArchitectures>
	                 	<microArchitecture number="416">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.ui.DebugPanelt</entity></client>
	                             		</clients>
	                             		
	                                        <target roleKind="AbstractClass"><entity>jswat.ui.UIAdapter</entity></target>
											<target roleKind="AbstractClass"><entity>jswat.ui.AbstractAdapter</entity></target>
						
	                             		<adaptee roleKind="Class"><entity>jswat.ui.graphical.GraphicalMessageAdapter</entity></adaptee>
										<adaptee roleKind="Class"><entity>jswat.plugins.edit.ToolbarCreator</entity></adaptee>
										<adaptee roleKind=" Abstract Class"><entity>jswat.plugins.edit.Session</entity></adaptee>
						
	                             		<adapter roleKind="Class"><entity>jswat.ui.console.ConsoleAdapter</entity></adapter>		
										<adapter roleKind="Class"><entity>jswat.plugins.jedit.JEditUIAdapter</entity></adapter>	
										<adapter roleKind="Class"><entity>jswat.ui.graphical.GraphicalAdapter</entity></adapter>				                             		
	       				 		</actors>
	    						<comments>
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>
	</program>
	<program>
	    <name>15 - DrJava v20020703</name>

	    <!-- Creational Patterns -->
	    <designPattern name="Factory Method">
	        <microArchitectures>
	            <microArchitecture number="2020">
	                <actors>
	                    <products>
	                        <product roleKind="AbstractClass">
	                            <entity> javax.swing.text.PlainDocument
	                        </entity>
	                        </product>
	                    </products>
	                    <concreteProducts>
	                        <concreteProduct roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.DefinitionsDocument
	                        </entity>
	                        </concreteProduct>
	                    </concreteProducts>
	                    <creators>
	                        <creator roleKind="AbstractClass">
	                            <entity> javax.swing.text.DefaultEditorKit
	                        </entity>
	                        </creator>
	                    </creators>
	                    <concreteCreators>
	                        <concreteCreator roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.DefinitionsEditorKit
	                        </entity>
	                        </concreteCreator>
	                    </concreteCreators>
	                </actors>
	                <comments> La méthode createDefaultDocument() représente la FactoryMethod()
	            </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>

	    <!-- Structural Patterns -->
	    <designPattern name="Adapter">
	        <microArchitectures>
	            <microArchitecture number="2868">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.newjvm.InterpreterJVM
	                            </entity>
	                        </client>
	                    </clients>
	                    <targets>
	                        <target roleKind="AbstractClass">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.JavaInterpreter
	                            </entity>
	                        </target>
	                    </targets>
	                    <adapters>
	                        <adapter roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.DynamicJavaAdapter
	                            </entity>
	                        </adapter>
	                    </adapters>
	                    <adaptees>
	                        <adaptee roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.DynamicJavaAdapter.$InterpreterExtension
	                            </entity>
	                        </adaptee>
	                    </adaptees>
	                </actors>
	                <comments>
				  Les methodes Request() étant interpret et setPackageScope et la methode SpecificRequest serait interpret de IInterpreterExtension.
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Bridge">
	        <microArchitectures>
	            <microArchitecture number="1041">
	                <actors>
	                    <Abstractions>
	                        <Abstraction roleKind="Class">
	                            <entity>
	                            </entity> edu.rice.cs.util.newjvm.AbstractMasterJVM
	                        </Abstraction>
	                    </Abstractions>
	                    <RefinedAbstractions>
	                        <RefinedAbstraction roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.MasterRemote
	                            </entity>
	                        </RefinedAbstraction>
	                    </RefinedAbstractions>
	                    <Implementors>
	                        <Implementor roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.SlaveRemote
	                            </entity>
	                        </Implementor>
	                        <Implementor roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.AbstractSlaveJVM
	                            </entity>
	                        </Implementor>
	                    </Implementors>
	                    <ConcreteImplementors>
	                        <ConcreteImplementor roleKind="Class">
	                            <entity>
	                            edu.rice.cs.util.newjvm.IntegratedMasterSlaveTest.$CounterSlave
	                            </entity>
	                        </ConcreteImplementor>
	                    </ConcreteImplementors>
	                </actors>
	                <comments>
	                Le Bridge ici, est formé de 2 Templates: 
	                1e template microarchitecture #2080 est pour l'abstration et le refinedabstration. 
	                2e template microarchitecture #2090 est l'implementor 
	                et le ConcreteImplementor qui est une class inner ce raccorde au 2e template. 
	                
	                Comme on peut voir , il y a seulement un ConcreteImplementor il serait bon de voir avec les autres versions de DrJava s'il n'y aurait pas eu evolution. 
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Proxy">
	        <microArchitectures>
	            <microArchitecture number="2040">
	                <actors>
	                    <proxies>
	                        <proxy roleKind="Class">
	                            <entity>  edu.rice.cs.drjava.model.compiler.CompilerProxy
	                            </entity>
	                        </proxy>
	                    </proxies>
	                    <subjects>
	                        <subject roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.compiler.CompilerInterface
	                            </entity>
	                        </subject>
	                    </subjects>
	                    <realSubjects>
	                        <realSubject roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.compiler.CompilerProxy
	                            </entity>
	                        </realSubject>
	                    </realSubjects>
	                </actors>
	                <comments> Proxy refer to subject, realSubject and subject interface are the same
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>

	    <!-- Behavioral Patterns -->
	    <designPattern name="State">
	        <microArchitectures>
	            <microArchitecture number="2050">
	                <actors>
	                    <contexts>
	                        <context roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelState</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Free</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideBlockComment</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideLineComment</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Stutter</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideDoubleQuote</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideSingleQuote</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>ReducedModelState update permet de connaitre l'état exact du model.</comments>
	            </microArchitecture>
	            <microArchitecture number="2085">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.Indenter</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRule</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionBracePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionDoNothing</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStarCurrStmtPlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevStmtPlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartStmtOfBracePlus</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>La méthode indentLine est commune à tous les tests et fait des set et get. La méthode indent(DefinitionsDocument doc) de Indenter appelle les indentLine.</comments>
	            </microArchitecture>
	            <microArchitecture number="2079">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ConfigPanel</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>Ce state est groupé avec un strategy et un template methode. La difference est fait  selon les methodes utilisés </comments>
	            		      Le state utilise la methode getComponent() .
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Strategy">
	        <microArchitectures>
	            <microArchitecture number="2070">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.Indenter</entity>
	                        </context>
	                    </contexts>
	                    <strategies>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleQuestion</entity>
	                        </strategy>
	                    </strategies>
	                    <concreteStrategies>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsCurly</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsParenOrBracket</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmpty</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWith</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWithSkipComments</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionExistCharInStmt</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionHasCharPrecedingOpenBrace</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionInsideComment</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionLineContains</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionNewParenPhrase</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsComment</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsWith</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartAfterOpenBrace</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartingNewStmt</entity>
	                        </concreteStrategy>
	                    </concreteStrategies>
	                </actors>
	                <comments>La méthode applyRule est commune à tous les tests et elle varie selon arguments passés. Indenter appelle indentLine qui appelle applyRule</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Template Method">
	        <microArchitectures>
	            <microArchitecture number="2222">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Brace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Gap</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode getType() est la primitive operation et getHighlightState() le TemplateMethod</comments>
	            </microArchitecture>
	            <microArchitecture number="2223">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleQuestion</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsCurly</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsParenOrBracket</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmpty</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWith</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWithSkipComments</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionExistCharInStmt</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionHasCharPrecedingOpenBrace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionInsideComment</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionLineContains</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionNewParenPhrase</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsComment</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsWith</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartAfterOpenBrace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartingNewStmt</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode applyRule(DefinitionsDocument doc) est la primitive operation et indentLine() le TemplateMethod. Le design pattern strategy (2070) est connecté à ce template method</comments>
	            </microArchitecture>
	            <microArchitecture number="2224">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleAction</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionBracePlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionDoNothing</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStarCurrStmtPlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevStmtPlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartStmtOfBracePlus</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode indentLine(DefinitionsDocument doc) est la primitive operation et indentLine(DefinitionsDocument doc, int pos) le TemplateMethod. Le design pattern strategy (2080) est connecté à ce template method</comments>
	            </microArchitecture>
	            <microArchitecture number="2226">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode setValue(T value) est la primitive operation et setValue(T value) et/ou resetToCurrent() est le TemplateMethod. Il y a un strategy (2071) et un state (2079) autour. </comments>
	            </microArchitecture>
	            <microArchitecture number="2080">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>  edu.rice.cs.util.newjvm.AbstractSlaveJVM
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.util.newjvm.SlaveRemote
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments> 1e template pour former un Bridge
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2090">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>  edu.rice.cs.util.newjvm.AbstractMasterJVM
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.util.newjvm.MasterRemote
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments> 2e template pour former un Bridge
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2100">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>   edu.rice.cs.drjava.model.definitions.reducedmodel.AbstractReducedModel
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelBrace
	                            </entity>
	                        </ConcreteClass>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelComment
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments>  Brace et Comment fonctionne en parallelle, 
	                			TemplateMethode : insertGapBetweenMultiCharBrace()
	                			primitive 1 : public void insertChar(char ch) 
	                			primitive 2	: public void insertNewline() 
	                			etc...
	                			Note : la representation fait par discribe n'est pas complete.
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2110">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>   edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.Gap
	                            </entity>
	                        </ConcreteClass>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.Brace 
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments>   TemplateMethode:  getHighlightState()
								 Primitive : gettype()
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	</program>
	<program>
	    <name>16 - DrJava v20020804</name>

	    <!-- Creational Patterns -->
	    <designPattern name="Factory Method">
	        <microArchitectures>
	            <microArchitecture number="2020">
	                <actors>
	                    <products>
	                        <product roleKind="AbstractClass">
	                            <entity> javax.swing.text.PlainDocument
	                        </entity>
	                        </product>
	                    </products>
	                    <concreteProducts>
	                        <concreteProduct roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.DefinitionsDocument
	                        </entity>
	                        </concreteProduct>
	                    </concreteProducts>
	                    <creators>
	                        <creator roleKind="AbstractClass">
	                            <entity> javax.swing.text.DefaultEditorKit
	                        </entity>
	                        </creator>
	                    </creators>
	                    <concreteCreators>
	                        <concreteCreator roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.DefinitionsEditorKit
	                        </entity>
	                        </concreteCreator>
	                    </concreteCreators>
	                </actors>
	                <comments> La méthode createDefaultDocument() représente la FactoryMethod()
	            </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Singleton">
	        <microArchitectures>
	            <microArchitecture number="402">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.definition.indent.Identer</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="403">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.javacFromClasspath</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="404">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.GJv6FromClasspath</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	            </microArchitecture>
	            <microArchitecture number="405">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.GJv6Compiler</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	            </microArchitecture>
	            <microArchitecture number="406">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.JSR14FromSetLocation</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	            </microArchitecture>
	            <microArchitecture number="407">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.JavacFromSetLocation</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	            </microArchitecture>
	            <microArchitecture number="408">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.CompilerRegistry</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	            </microArchitecture>
	            <microArchitecture number="409">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.compiler.JavacFromToolsJar</entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>

	    <!-- Structural Patterns -->

	    <designPattern name="Adapter">
	        <microArchitectures>
	            <microArchitecture number="2868">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.newjvm.InterpreterJVM
	                            </entity>
	                        </client>
	                    </clients>
	                    <targets>
	                        <target roleKind="AbstractClass">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.JavaInterpreter
	                            </entity>
	                        </target>
	                    </targets>
	                    <adapters>
	                        <adapter roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.DynamicJavaAdapter
	                            </entity>
	                        </adapter>
	                    </adapters>
	                    <adaptees>
	                        <adaptee roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.DynamicJavaAdapter.$InterpreterExtension
	                            </entity>
	                        </adaptee>
	                    </adaptees>
	                </actors>
	                <comments>
				  Les methodes Request() étant interpret et setPackageScope et la methode SpecificRequest serait interpret de IInterpreterExtension.
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="416">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.DebugPanelt</entity>
	                        </client>
	                    </clients>
	                    <target roleKind="AbstractClass">
	                        <entity>jswat.ui.UIAdapter</entity>
	                    </target>
	                    <target roleKind="AbstractClass">
	                        <entity>jswat.ui.AbstractAdapter</entity>
	                    </target>
	                    <adaptee roleKind="Class">
	                        <entity>jswat.ui.graphical.GraphicalMessageAdapter</entity>
	                    </adaptee>
	                    <adaptee roleKind="Class">
	                        <entity>jswat.plugins.edit.ToolbarCreator</entity>
	                    </adaptee>
	                    <adaptee roleKind=" Abstract Class">
	                        <entity>jswat.plugins.edit.Session</entity>
	                    </adaptee>
	                    <adapter roleKind="Class">
	                        <entity>jswat.ui.console.ConsoleAdapter</entity>
	                    </adapter>
	                    <adapter roleKind="Class">
	                        <entity>jswat.plugins.jedit.JEditUIAdapter</entity>
	                    </adapter>
	                    <adapter roleKind="Class">
	                        <entity>jswat.ui.graphical.GraphicalAdapter</entity>
	                    </adapter>
	                </actors>
	                <comments>
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Bridge">
	        <microArchitectures>
	            <microArchitecture number="1041">
	                <actors>
	                    <Abstractions>
	                        <Abstraction roleKind="Class">
	                            <entity>
	                            </entity> edu.rice.cs.util.newjvm.AbstractMasterJVM
	                        </Abstraction>
	                    </Abstractions>
	                    <RefinedAbstractions>
	                        <RefinedAbstraction roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.MasterRemote
	                            </entity>
	                        </RefinedAbstraction>
	                    </RefinedAbstractions>
	                    <Implementors>
	                        <Implementor roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.SlaveRemote
	                            </entity>
	                        </Implementor>
	                        <Implementor roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.AbstractSlaveJVM
	                            </entity>
	                        </Implementor>
	                    </Implementors>
	                    <ConcreteImplementors>
	                        <ConcreteImplementor roleKind="Class">
	                            <entity>
	                            edu.rice.cs.util.newjvm.IntegratedMasterSlaveTest.$CounterSlave
	                            </entity>
	                        </ConcreteImplementor>
	                    </ConcreteImplementors>
	                </actors>
	                <comments>
	                Le Bridge ici, est formé de 2 Templates: 
	                1e template microarchitecture #2080 est pour l'abstration et le refinedabstration. 
	                2e template microarchitecture #2090 est l'implementor 
	                et le ConcreteImplementor qui est une class inner ce raccorde au 2e template. 
	                
	                Comme on peut voir , il y a seulement un ConcreteImplementor il serait bon de voir avec les autres versions de DrJava s'il n'y aurait pas eu2 evolution. 
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Proxy">
	        <microArchitectures>
	            <microArchitecture number="2040">
	                <actors>
	                    <proxies>
	                        <proxy roleKind="Class">
	                            <entity>  edu.rice.cs.drjava.model.compiler.CompilerProxy
	                            </entity>
	                        </proxy>
	                    </proxies>
	                    <subjects>
	                        <subject roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.compiler.CompilerInterface
	                            </entity>
	                        </subject>
	                    </subjects>
	                    <realSubjects>
	                        <realSubject roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.compiler.CompilerProxy
	                            </entity>
	                        </realSubject>
	                    </realSubjects>
	                </actors>
	                <comments> Proxy refer to subject, realSubject and subject interface are the same
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <!-- Behavioral Patterns -->
	    <designPattern name="Command">
	        <microArchitectures>
	            <microArchitecture number="412">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.DefaultGlobalModel</entity>
	                        </client>
	                    </clients>
	                    <commands>
	                        <command roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.FileOpenSelector</entity>
	                        </command>
	                    </commands>
	                    <concreteCommands>
	                        <concreteCommand roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.FileSelector</entity>
	                        </concreteCommand>
	                        <concreteCommand roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.CancellingSelector</entity>
	                        </concreteCommand>
	                        <concreteCommand roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.WarningFileSelector</entity>
	                        </concreteCommand>
	                    </concreteCommands>
	                    <invokers>
	                        <invoker roleKind="Class">
	                            <entity>edu.rice.cs.drjava.DrJava</entity>
	                        </invoker>
	                        <invoker roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.GlobalModelIOTest</entity>
	                        </invoker>
	                        <invoker roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.DefaultGlobalModel</entity>
	                        </invoker>
	                        <invoker roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.MainFrame</entity>
	                        </invoker>
	                    </invokers>
	                    <receivers>
	                        <receiver roleKind="Class">
	                            <entity>java.io.File</entity>
	                        </receiver>
	                    </receivers>
	                </actors>
	                <comments>
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="415">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity>
	                        </client>
	                    </clients>
	                    <commands>
	                        <command roleKind="AbstractClass">
	                            <entity>javax.swing.undo.AbstractUndoableEdit</entity>
	                        </command>
	                    </commands>
	                    <concreteCommands>
	                        <concreteCommand roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.CommandUndoableEdit</entity>
	                        </concreteCommand>
	                    </concreteCommands>
	                    <invokers>
	                        <invoker roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity>
	                        </invoker>
	                    </invokers>
	                    <receivers>
	                        <receiver roleKind="AbstractClass">
	                            <entity>java.lang.Runnable</entity>
	                        </receiver>
	                    </receivers>
	                </actors>
	                <comments>
	     				DefinitionsDocument joue le role de Invoker et de client .
	   				</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Iterator">
	        <microArchitectures>
	            <microArchitecture number="401">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelComment</entity>
	                        </client>
	                    </clients>
	                    <iterators>
	                        <iterator rolekind="Class|AbstractClass">
	                            <entity>
	                            </entity>
	                        </iterator>
	                    </iterators>
	                    <concreteIterators>
	                        <concreteIterator rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Iterator</entity>
	                        </concreteIterator>
	                    </concreteIterators>
	                    <aggregates>
	                        <aggregate rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ModelList</entity>
	                        </aggregate>
	                    </aggregates>
	                    <concreteAggregates>
	                        <concreteAggregate rolekind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.TokenList</entity>
	                        </concreteAggregate>
	                    </concreteAggregates>
	                </actors>
	                <comments> 
	      						Nous avons pas l'iterator, mais nous avons la classe ReducedModelComment qui cree un Iterator a travers la classe TokenList (ConcreteAgregate)
	        					</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Mediator">
	        <microArchitectures>
	            <microArchitecture number="3901">
	                <actors>
	                    <mediators>
	                        <mediator roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.debug.DebugManager</entity>
	                        </mediator>
	                    </mediators>
	                    <concreteMediators>
	                        <concreteMediator roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.debug.DebugManager
	                            </entity>
	                        </concreteMediator>
	                    </concreteMediators>
	                    <colleagues>
	                        <colleague roleKind="AbstractClass">
	                            <entity> com.sun.jdi.request.EventRequest
	                            </entity>
	                        </colleague>
	                    </colleagues>
	                    <concreateColleagues>
	                        <concreateColleague roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.debug.Breakpoint
	                            </entity>
	                        </concreateColleague>
	                        <concreateColleague roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.debug.Step
	                            </entity>
	                        </concreateColleague>
	                    </concreateColleagues>
	                </actors>
	                <comments> Le mediator et le concreteMediator sont les memes. Il y a un heritage double pour le colleague. 
	                DocumentDebugAction et DebugAction herite de EventRequest. DebugManager appelle EventRequest a l'aide de la methode getProperty(). De plus, ce patron est lie a un template methode (2225).
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Memento">
	        <microArchitectures>
	            <microArchitecture number="413">
	                <actors>
	                    <clients>
	                        <client roleKind="Class|AbstractClass">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <mementos>
	                        <memento roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.HighlightStatus</entity>
	                        </memento>
	                    </mementos>
	                    <originators>
	                        <originator roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity>
	                        </originator>
	                    </originators>
	                    <caretakers>
	                        <caretaker roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity>
	                        </caretaker>
	                    </caretakers>
	                </actors>
	                <comments>
	     						DefinitionsDocument joue le role de caretaker et de originator. En effet c'est un blob qui regroupe beaucoup de classes et de methodes.
								Client non precise.
						</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="State">
	        <microArchitectures>
	            <microArchitecture number="2050">
	                <actors>
	                    <contexts>
	                        <context roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelState</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Free</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideBlockComment</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideLineComment</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Stutter</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideDoubleQuote</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideSingleQuote</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>ReducedModelState update permet de connaitre l'état exact du model.</comments>
	            </microArchitecture>
	            <microArchitecture number="2085">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.Indenter</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRule</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionBracePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionDoNothing</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStarCurrStmtPlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevStmtPlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartStmtOfBracePlus</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>La méthode indentLine est commune à tous les tests et fait des set et get. La méthode indent(DefinitionsDocument doc) de Indenter appelle les indentLine.</comments>
	            </microArchitecture>
	            <microArchitecture number="2079">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ConfigPanel</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>Ce state est groupé avec un strategy et un template methode. La difference est fait  selon les methodes utilisés </comments>
	            		      Le state utilise la methode getComponent() .
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Strategy">
	        <microArchitectures>
	            <microArchitecture number="2070">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.Indenter</entity>
	                        </context>
	                    </contexts>
	                    <strategies>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleQuestion</entity>
	                        </strategy>
	                    </strategies>
	                    <concreteStrategies>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsCurly</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsParenOrBracket</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmpty</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWith</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWithSkipComments</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionExistCharInStmt</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionHasCharPrecedingOpenBrace</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionInsideComment</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionLineContains</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionNewParenPhrase</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsComment</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsWith</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartAfterOpenBrace</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartingNewStmt</entity>
	                        </concreteStrategy>
	                    </concreteStrategies>
	                </actors>
	                <comments>La méthode applyRule est commune à tous les tests et elle varie selon arguments passés. Indenter appelle indentLine qui appelle applyRule</comments>
	            </microArchitecture>
	            <microArchitecture number="2071">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ConfigPanel</entity>
	                        </context>
	                    </contexts>
	                    <strategies>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </strategy>
	                    </strategies>
	                    <concreteStrategies>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteStrategy>
	                    </concreteStrategies>
	                </actors>
	                <comments>Ce strategy est groupé avec un state et un template methode. La difference est fait  selon les methodes utilisés.
	                    Le strategy utilise la methode updateconfig() et via update pour la class ConfigPanel </comments>
	            </microArchitecture>
	            <microArchitecture number="414">
	                <actors>
	                    <clients>
	                        <client roleKind="Class|AbstractClass">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.config.OptionMapLoader</entity>
	                        </context>
	                    </contexts>
	                    <strategies>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.config.FormatStrategy</entity>
	                        </strategy>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.config.ParseStrategy</entity>
	                        </strategy>
	                    </strategies>
	                    <concreteStrategies>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.config.StringOption</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.config.BooleanOption</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.config.ColorOption</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.config.FileOption</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.config.IntegerOption</entity>
	                        </concreteStrategy>
	                    </concreteStrategies>
	                </actors>
	                <comments>
								Il n'y a pas de client
	   							</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Template Method">
	        <microArchitectures>
	            <microArchitecture number="2222">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Brace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Gap</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode getType() est la primitive operation et getHighlightState() le TemplateMethod</comments>
	            </microArchitecture>
	            <microArchitecture number="2223">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleQuestion</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsCurly</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsParenOrBracket</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmpty</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWith</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWithSkipComments</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionExistCharInStmt</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionHasCharPrecedingOpenBrace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionInsideComment</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionLineContains</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionNewParenPhrase</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsComment</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsWith</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartAfterOpenBrace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartingNewStmt</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode applyRule(DefinitionsDocument doc) est la primitive operation et indentLine() le TemplateMethod. Le design pattern strategy (2070) est connecté à ce template method</comments>
	            </microArchitecture>
	            <microArchitecture number="2224">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleAction</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionBracePlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionDoNothing</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStarCurrStmtPlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevStmtPlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartStmtOfBracePlus</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode indentLine(DefinitionsDocument doc) est la primitive operation et indentLine(DefinitionsDocument doc, int pos) le TemplateMethod. Le design pattern strategy (2080) est connecté à ce template method</comments>
	            </microArchitecture>
	            <microArchitecture number="2225">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.debug.DocumentDebugAction</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Breakpoint</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode _createRequest(ReferenceType ref)) est la primitive operation et createRequest(ReferenceType rt) le TemplateMethod</comments>
	            </microArchitecture>
	            <microArchitecture number="2226">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode setValue(T value) est la primitive operation et setValue(T value) et/ou resetToCurrent() est le TemplateMethod. Il y a un strategy (2071) et un state (2079) autour. </comments>
	            </microArchitecture>
	            <microArchitecture number="2080">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>  edu.rice.cs.util.newjvm.AbstractSlaveJVM
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.util.newjvm.SlaveRemote
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments> 1e template pour former un Bridge
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2090">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>  edu.rice.cs.util.newjvm.AbstractMasterJVM
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.util.newjvm.MasterRemote
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments> 2e template pour former un Bridge
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2100">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>   edu.rice.cs.drjava.model.definitions.reducedmodel.AbstractReducedModel
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelBrace
	                            </entity>
	                        </ConcreteClass>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelComment
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments>  Brace et Comment fonctionne en parallelle, 
	                			TemplateMethode : insertGapBetweenMultiCharBrace()
	                			primitive 1 : public void insertChar(char ch) 
	                			primitive 2	: public void insertNewline() 
	                			etc...
	                			Note : la representation fait par discribe n'est pas complete.
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2110">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>   edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.Gap
	                            </entity>
	                        </ConcreteClass>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.Brace 
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments>   TemplateMethode:  getHighlightState()
								 Primitive : gettype()
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Visitor">
	        <microArchitectures>
	            <microArchitecture number="410">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.repl.DynamicJavaAdapter.InterpreterExtension</entity>
	                        </client>
	                    </clients>
	                    <visitors>
	                        <visitor roleKind="AbstractClass">
	                            <entity>koala.dynamicjava.tree.visitor.Visitor</entity>
	                        </visitor>
	                    </visitors>
	                    <concreteVisitors>
	                        <concreteVisitor roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.repl.EvaluationVisitorExtension</entity>
	                        </concreteVisitor>
	                        <concreteVisitor roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.repl.NameVisitorExtension</entity>
	                        </concreteVisitor>
	                    </concreteVisitors>
	                    <elements>
	                        <element roleKind="AbstractClass">
	                            <entity>koala.dynamicjava.tree.Node</entity>
	                        </element>
	                    </elements>
	                    <concreteElements>
	                        <concreteElement roleKind="Class">
	                            <entity>koala.dynamicjava.tree.ConstructorDeclaration</entity>
	                        </concreteElement>
	                        <concreteElement roleKind="Class">
	                            <entity>koala.dynamicjava.tree.ArrayInitializer</entity>
	                        </concreteElement>
	                        <concreteElement roleKind="Class">
	                            <entity>koala.dynamicjava.tree.CompileTimeQualifiedName</entity>
	                        </concreteElement>
	                        <concreteElement roleKind="Class">
	                            <entity>koala.dynamicjava.tree.BitAndExpression</entity>
	                        </concreteElement>
	                        <concreteElement roleKind="Class">
	                            <entity>koala.dynamicjava.tree.AddExpression</entity>
	                        </concreteElement>
	                    </concreteElements>
	                    <objectStructures>
	                        <objectStructure roleKind="AbstractClass">
	                            <entity>koala.dynamicjava.parser.wrapper.SourceCodeParser</entity>
	                        </objectStructure>
	                    </objectStructures>
	                </actors>
	                <comments>
	     							Ce patron de conception est interessant car il utilise des classes qui se trouvent dans d'autres packages qui n'ont pas ete cree par l'equipes de 
									DrJava. A travers la classe DynamicJavaAdapter des liens entre des classes qui n'ont rien en commun est possible notament celles de DrJava avec Koala.
									Il y a beaucoup plus de concreteElements environ une vingtaine.
	   				</comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	</program>
	<program>
		<name>17 - DrJava v20030203</name>
		<designPattern name="Command">
	         	<microArchitectures>
	                 	<microArchitecture number="417">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></client>
	                             		</clients>
	                             		<commands>
	                                  		<command roleKind="AbstractClass"><entity>javax.swing.undo.AbstractUndoableEdit</entity></command>
											
	                             		</commands>
	     								<concreteCommands>
	                                  		<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.CommandUndoableEdit</entity></concreteCommand>
	                             		</concreteCommands>
	     								<invokers>
	                                  		<invoker roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></invoker>
	                             		</invokers>
	     								<receivers>
	                                  		<receiver roleKind="AbstractClass"><entity>java.lang.Runnable</entity></receiver>
	                             		</receivers>
	       				 </actors>
	    				<comments>
	     				DefinitionsDocument joue le role de Invoker et de client .
	   				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
			<designPattern name="FactoryMethod">
	          <microArchitectures>
	                 <microArchitecture number="418">
	                       <actors>
	                           <clients>
	                                <client roleKind="Class|AbstractClass"><entity></entity></client>
	                           </clients>
	                           <products>
	                                <product roleKind="Class"><entity>edu.rice.cs.drjava.platform.DefaultPlatform</entity></product>
									<product roleKind="Class"><entity>edu.rice.cs.drjava.platform.MacPlatform</entity></product>
									<product roleKind="Class"><entity>edu.rice.cs.drjava.platform.Mac14Platform</entity></product>
									<product roleKind="Class"><entity>edu.rice.cs.drjava.platform.WindowsPlatform</entity></product>
	                           </products>
	   
	     						 <concreteProducts>
	                                <concreteProduct roleKind="AbstractClass"><entity>edu.rice.cs.drjava.platform.PlatformSupport</entity></concreteProduct>
	                           </concreteProducts>
	   
	      						<creators>
	                                <creator roleKind="Class|AbstractClass"><entity></entity></creator>
	                           </creators>
	
	      						<concreteCreators>
	                                <concreteCreator roleKind="Class"><entity>edu.rice.cs.drjava.platform.PlatformFactory</entity></concreteCreator>
	                           </concreteCreators>
	    				</actors>
	   					 <comments>
						 il n'y a pas de creators
	        			</comments>
	                 </microArchitecture>
	          </microArchitectures>
	   </designPattern>
	   <designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="419">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.platform.DefaultPlatform</entity></singleton>
										</singletons>
									</actors>
	    							<comments>
	      							</comments>
	               		</microArchitecture>
	            </microArchitectures>
	    </designPattern>	
	   <designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="420">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.platform.MacPlatform</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
			   <designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="421">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.platform.Mac14Platform</entity></singleton>
						
						</singletons>
	
					</actors>
	    				<comments>
	      				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
	 <designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="422">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.platform.WindowsPlatform</entity></singleton>
						
						</singletons>
	
					</actors>
	    				<comments>
	      				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
	 <designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="423">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.platform.PlatformFactory</entity></singleton>
						
						</singletons>
	
					</actors>
	    				<comments>
	      				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>			
			<designPattern name="Proxy">
	         	<microArchitectures>
	                 	<microArchitecture number="424">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.compiler.CompilerRegistry</entity></client>
	                             		</clients>
	                             		
	                                        <proxy rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.CompilerProxy</entity></proxy>
						<subject rolekind="AbstractClass"><entity>edu.rice.cs.drjava.model.compiler.CompilerInterface</entity></subject>
						<realSubject rolekind="AbstractClass"><entity>edu.rice.cs.drjava.model.compiler.CompilerInterface</entity></realSubject>
	       				 </actors>
	    				<comments>
	     CompilerProxy appelle le subject CompilerInterface par la methode compile.C'est pour cela qu'on pense que le Subject et le RealSubject sont les memes. 
		 Les acteurs n'ont pas changer de la premiere version il y a eu seulement changement dans le nombre de classes que le proxy controle qui ont augmente.
	   				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
	<designPattern name="Command">
	         	<microArchitectures>
	                 	<microArchitecture number="425">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.History</entity></client>
	                             		</clients>
	                             		<commands>
	                                  		<command roleKind="AbstractClass"><entity>edu.rice.cs.drjava.model.FileOpenSelector</entity></command>
											<command roleKind="AbstractClass"><entity>edu.rice.cs.drjava.model.FileSaveSelector</entity></command>
	                             		</commands>
	     								<concreteCommands>
	                                  		<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.CancelingSelector</entity></concreteCommand>
											<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.FileSelector</entity></concreteCommand>
											<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.WarningFileSelector</entity></concreteCommand>
											<concreteCommand roleKind="Class"><entity>edu.rice.cs.drjava.model.TrivialFSS</entity></concreteCommand>
	                             		</concreteCommands>
	     								<invokers>
	                                  		<invoker roleKind="Class"><entity>edu.rice.cs.drjava.model.DefaultGlobalModel</entity></invoker>
											<invoker roleKind="Class"><entity>edu.rice.cs.drjava.model.GlobalModelIOTest</entity></invoker>
											<invoker roleKind="Class"><entity>edu.rice.cs.drjava.ui.MainFrameTest</entity></invoker>
											<invoker roleKind="Class"><entity>edu.rice.cs.drjava.ui.RecentFileManager</entity></invoker>
											<invoker roleKind="Class"><entity></entity>edu.rice.cs.drjava.DrJava</invoker>
	                             		</invokers>
	     								<receivers>
	                                  		<receiver roleKind="Class"><entity>java.io.File</entity></receiver>
	                             		</receivers>
	       				 </actors>
	    				<comments>
	   				</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>
					<designPattern name="Memento">
	         	<microArchitectures>
	                 	<microArchitecture number="426">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class|AbstractClass"><entity></entity></client>
	                             		</clients>
	                             		<mementos>
	                                  		<memento roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.HighlightStatus</entity></memento>
	                             		</mementos>
	     								<originators>
	                                  		<originator roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></originator>
	                             		</originators>
	     								<caretakers>
	                                  	<caretaker roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.DefinitionsDocument</entity></caretaker>
	                             		</caretakers>
	       				 </actors>
	    				<comments>
	     						DefinitionsDocument joue le role de caretaker et de originator. En effet c'est un blob qui regroupe beaucoup de classes et de methodes.
								Client non precise.
						</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>
	
			 <designPattern name="Strategy">
	         	<microArchitectures>
	                 	<microArchitecture number="427">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class|AbstractClass"><entity></entity></client>
	                             		</clients>
	                             		<contexts>
	                                  		<context roleKind="Class"><entity>edu.rice.cs.drjava.config.VectorOption</entity></context>
										</contexts>
										<strategies>
	                             			<strategy roleKind="AbstractClass"><entity>edu.rice.cs.drjava.config.FormatStrategy</entity></strategy>
											<strategy roleKind="AbstractClass"><entity>edu.rice.cs.drjava.config.ParseStrategy</entity></strategy>
										</strategies>
										<concreteStrategies>
	                             			<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.VectorOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.KeyStrokeOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.StringOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.BooleanOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.ColorOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.FileOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.IntegerOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.NonNegativeIntegerOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.FontOption</entity></concreteStrategy>
											<concreteStrategy roleKind="Class"><entity>edu.rice.cs.drjava.config.ForcedChoiceOption</entity></concreteStrategy>
	                             		</concreteStrategies>
	     						</actors>
	    						<comments>
	     						Il n'y a pas de client
	   							</comments>
	               		</microArchitecture>
	          	</microArchitectures>
	   </designPattern>	
			<designPattern name="Visitor">
	         	<microArchitectures>
	                 	<microArchitecture number="428">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.DynamicJavaAdapter.InterpreterExtension</entity></client>
	                             		</clients>
										<visitors>
	                             			<visitor roleKind="AbstractClass"><entity>koala.dynamicjava.tree.visitor.Visitor</entity></visitor>
	                             		</visitors>
										<concreteVisitors>
	                             			<concreteVisitor roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.TypeCheckerExtension</entity></concreteVisitor>
											<concreteVisitor roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.EvaluationVisitorExtension</entity></concreteVisitor>
										</concreteVisitors>
										<elements>
	                             			<element roleKind="AbstractClass"><entity>koala.dynamicjava.tree.Node</entity></element>
	                             		</elements>
										<concreteElements>
	                             			<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.ConstructorDeclaration</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.ArrayInitializer</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.CompileTimeQualifiedName</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.BitAndExpression</entity></concreteElement>
											<concreteElement roleKind="Class"><entity>koala.dynamicjava.tree.AddExpression</entity></concreteElement>
										</concreteElements>
										<objectStructures>
											<objectStructure roleKind="AbstractClass"><entity>koala.dynamicjava.parser.wrapper.SourceCodeParser</entity></objectStructure>
	                             		</objectStructures>
	                             
	     							</actors>
	    							<comments>
	     							Ce patron de conception est interessant car il utilise des classes qui se trouvent dans d'autres packages qui n'ont pas ete cree par l'equipes de 
									DrJava. A travers la classe DynamicJavaAdapter des liens entre des classes qui n'ont rien en commun est possible notament celles de DrJava avec Koala.
									Il y a beaucoup plus de concreteElements environ une vingtaine.
	   								</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>		
	  
		<designPattern name="Iterator"> 
	           <microArchitectures> 
	                   <microArchitecture number="429"> 
	                           <actors> 
	                                <clients> 
	                                     <client roleKind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelComment</entity></client> 
	                                </clients> 
	
	                                <iterators> 
	                                     <iterator rolekind="Class|AbstractClass"><entity></entity></iterator> 
	                                </iterators> 
	           						<concreteIterators> 
	                                     <concreteIterator rolekind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Iterator</entity></concreteIterator> 
	                                </concreteIterators> 
	           						<aggregates> 
	                                     <aggregate rolekind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ModelList</entity></aggregate> 
	                                </aggregates> 
	          						 <concreteAggregates> 
	                                     <concreteAggregate rolekind="Class"><entity>edu.rice.cs.drjava.model.definitions.reducedmodel.TokenList</entity></concreteAggregate> 
	                                </concreteAggregates> 
	             				</actors> 
	         					<comments> 
	      						Nous avons pas l'iterator, mais nous avons la classe ReducedModelComment qui cree un Iterator a travers la classe TokenList (ConcreteAgregate)
	        					</comments> 
	                  </microArchitecture> 
	              </microArchitectures> 
	     </designPattern> 
	   	<designPattern name="Adapter">
	         	<microArchitectures>
	                 	<microArchitecture number="430">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.JavaInterpreterTest</entity></client>
	                             		</clients>
	                             		
	                                        <target roleKind="AbstractClass"><entity>edu.rice.cs.drjava.model.repl.JavaInterpreter</entity></target>
						
	                             		<adaptee roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.InterpreterExtension</entity></adaptee>
						
	                             		<adapter roleKind="Class"><entity>edu.rice.cs.drjava.model.repl.DynamicJavaAdapter</entity></adapter>					                             		
	       				 		</actors>
	    						<comments>
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="431">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.definition.indent.Identer</entity></singleton>
										</singletons>
										</actors>
	    								<comments>
	      								</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>
	
	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="432">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.javacFromClasspath</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
	
	
	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="433">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.GJv6FromClasspath</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="434">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.GJv6Compiler</entity></singleton>
										</singletons>
	
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="435">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.JSR14FromSetLocation</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="436">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.JavacFromSetLocation</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="437">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.CompilerRegistry</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
		<designPattern name="Singleton">
	         	<microArchitectures>
	                 	<microArchitecture number="438">
	                        	 <actors>
	                             		<clients>
	                                  		<client roleKind="Class"><entity></entity></client>
	                             		</clients>
	                             		<singletons>
	                                        <singleton rolekind="Class"><entity>edu.rice.cs.drjava.model.compiler.JavacFromToolsJar</entity></singleton>
										</singletons>
								</actors>
	    						<comments>
	      						Nous pensons que nous avons un singleton par la presence de la classe static et des commentaires laisser par les programmeurs disant que c'est un singleton.
	   							</comments>
	               		</microArchitecture>
	            	</microArchitectures>
	    	</designPattern>	
	</program>
	<program>
	    <name>18 - DrJava v20040326</name>

	    <!-- Creational Patterns -->
	    <designPattern name="Factory Method">
	        <microArchitectures>
	            <microArchitecture number="2020">
	                <actors>
	                    <products>
	                        <product roleKind="AbstractClass">
	                            <entity> javax.swing.text.PlainDocument
	                        </entity>
	                        </product>
	                    </products>
	                    <concreteProducts>
	                        <concreteProduct roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.DefinitionsDocument
	                        </entity>
	                        </concreteProduct>
	                    </concreteProducts>
	                    <creators>
	                        <creator roleKind="AbstractClass">
	                            <entity> javax.swing.text.DefaultEditorKit
	                        </entity>
	                        </creator>
	                    </creators>
	                    <concreteCreators>
	                        <concreteCreator roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.DefinitionsEditorKit
	                        </entity>
	                        </concreteCreator>
	                    </concreteCreators>
	                </actors>
	                <comments> La méthode createDefaultDocument() représente la FactoryMethod()
	            </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Singleton">
	        <microArchitectures>
	            <microArchitecture number="1040">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
	                            </entity>
	                        </client>
	                    </clients>
	                    <singletons>
	                        <singleton roleKind="Class">
	                            <entity>
	                            </entity>
	                        </singleton>
	                    </singletons>
	                </actors>
	                <comments>
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    
	    <!-- Structural Patterns -->
	    <designPattern name="Adapter">
	        <microArchitectures>
	            <microArchitecture number="2868">
	                <actors>
	                    <clients>
	                        <client roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.newjvm.InterpreterJVM
	                            </entity>
	                        </client>
	                    </clients>
	                    <targets>
	                        <target roleKind="AbstractClass">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.JavaInterpreter
	                            </entity>
	                        </target>
	                    </targets>
	                    <adapters>
	                        <adapter roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.DynamicJavaAdapter
	                            </entity>
	                        </adapter>
	                    </adapters>
	                    <adaptees>
	                        <adaptee roleKind="Class">
	                            <entity>
						  edu.rice.cs.drjava.model.repl.DynamicJavaAdapter.$InterpreterExtension
	                            </entity>
	                        </adaptee>
	                    </adaptees>
	                </actors>
	                <comments>
				  Les methodes Request() étant interpret et setPackageScope et la methode SpecificRequest serait interpret de IInterpreterExtension.
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Bridge">
	        <microArchitectures>
	            <microArchitecture number="1041">
	                <actors>
	                    <Abstractions>
	                        <Abstraction roleKind="Class">
	                            <entity>
	                            </entity> edu.rice.cs.util.newjvm.AbstractMasterJVM
	                        </Abstraction>
	                    </Abstractions>
	                    <RefinedAbstractions>
	                        <RefinedAbstraction roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.MasterRemote
	                            </entity>
	                        </RefinedAbstraction>
	                    </RefinedAbstractions>
	                    <Implementors>
	                        <Implementor roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.SlaveRemote
	                            </entity>
	                        </Implementor>
	                        <Implementor roleKind="AbstractClass">
	                            <entity> edu.rice.cs.util.newjvm.AbstractSlaveJVM
	                            </entity>
	                        </Implementor>
	                    </Implementors>
	                    <ConcreteImplementors>
	                        <ConcreteImplementor roleKind="Class">
	                            <entity>
	                            edu.rice.cs.util.newjvm.IntegratedMasterSlaveTest.$CounterSlave
	                            </entity>
	                        </ConcreteImplementor>
	                    </ConcreteImplementors>
	                </actors>
	                <comments>
	                Le Bridge ici, est formé de 2 Templates: 
	                1e template microarchitecture #2080 est pour l'abstration et le refinedabstration. 
	                2e template microarchitecture #2090 est l'implementor 
	                et le ConcreteImplementor qui est une class inner ce raccorde au 2e template. 
	                
	                Comme on peut voir , il y a seulement un ConcreteImplementor il serait bon de voir avec les autres versions de DrJava s'il n'y aurait pas eu evolution. 
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Proxy">
	        <microArchitectures>
	            <microArchitecture number="2040">
	                <actors>
	                    <proxies>
	                        <proxy roleKind="Class">
	                            <entity>  edu.rice.cs.drjava.model.compiler.CompilerProxy
	                            </entity>
	                        </proxy>
	                    </proxies>
	                    <subjects>
	                        <subject roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.compiler.CompilerInterface
	                            </entity>
	                        </subject>
	                    </subjects>
	                    <realSubjects>
	                        <realSubject roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.compiler.CompilerProxy
	                            </entity>
	                        </realSubject>
	                    </realSubjects>
	                </actors>
	                <comments> Proxy refer to subject, realSubject and subject interface are the same
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <!-- Behavioral Patterns -->
	    <designPattern name="Mediator">
	        <microArchitectures>
	            <microArchitecture number="3901">
	                <actors>
	                    <mediators>
	                        <mediator roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.debug.Debugger</entity>
	                        </mediator>
	                    </mediators>
	                    <concreteMediators>
	                        <concreteMediator roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.debug.JPDADebugger
	                            </entity>
	                        </concreteMediator>
	                    </concreteMediators>
	                    <colleagues>
	                        <colleague roleKind="AbstractClass">
	                            <entity> com.sun.jdi.request.EventRequest
	                            </entity>
	                        </colleague>
	                    </colleagues>
	                    <concreateColleagues>
	                        <concreateColleague roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.debug.Breakpoint
	                            </entity>
	                        </concreateColleague>
	                        <concreateColleague roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.debug.Step
	                            </entity>
	                        </concreateColleague>
	                    </concreateColleagues>
	                </actors>
	                <comments> Le mediator et le concreteMediator sont les memes. Il y a un heritage double pour le colleague. 
	                DocumentDebugAction et DebugAction herite de EventRequest. DebugManager appelle EventRequest a l'aide de la methode getProperty. De plus, ce patron est lie a un template methode (2225).
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="State">
	        <microArchitectures>
	            <microArchitecture number="2050">
	                <actors>
	                    <contexts>
	                        <context roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelState</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Free</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideBlockComment</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideLineComment</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Stutter</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideDoubleQuote</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.InsideSingleQuote</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>ReducedModelState update permet de connaitre l'état exact du model.</comments>
	            </microArchitecture>
	            <microArchitecture number="2085">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.Indenter</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRule</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionBracePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionDoNothing</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStarCurrStmtPlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevStmtPlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartStmtOfBracePlus</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlusMultilinePreserve</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLineBackup</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlusMultiline</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>La méthode indentLine est commune à tous les tests et fait des set et get. La méthode indent(DefinitionsDocument doc) de Indenter appelle les indentLine.</comments>
	            </microArchitecture>
	            <microArchitecture number="2079">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ConfigPanel</entity>
	                        </context>
	                    </contexts>
	                    <states>
	                        <state roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </state>
	                    </states>
	                    <concreteStates>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteState>
	                        <concreteState roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ForcedChoiceOptionComponent</entity>
	                        </concreteState>
	                    </concreteStates>
	                </actors>
	                <comments>Ce state est groupé avec un strategy et un template methode. La difference est fait  selon les methodes utilisés </comments>
	            		      Le state utilise la methode getComponent() .
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Strategy">
	        <microArchitectures>
	            <microArchitecture number="2070">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.Indenter</entity>
	                        </context>
	                    </contexts>
	                    <strategies>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleQuestion</entity>
	                        </strategy>
	                    </strategies>
	                    <concreteStrategies>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsCurly</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsParenOrBracket</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmpty</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWith</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWithSkipComments</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionExistCharInStmt</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionHasCharPrecedingOpenBrace</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionInsideComment</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionLineContains</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionNewParenPhrase</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsComment</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsWith</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartAfterOpenBrace</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartingNewStmt</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionFollowedByStar</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmptyOrEnterPress</entity>
	                        </concreteStrategy>
	                    </concreteStrategies>
	                </actors>
	                <comments>La méthode applyRule est commune à tous les tests et elle varie selon arguments passés. Indenter appelle indentLine qui appelle applyRule</comments>
	            </microArchitecture>
	            <microArchitecture number="2071">
	                <actors>
	                    <contexts>
	                        <context roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ConfigPanel</entity>
	                        </context>
	                    </contexts>
	                    <strategies>
	                        <strategy roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </strategy>
	                    </strategies>
	                    <concreteStrategies>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteStrategy>
	                        <concreteStrategy roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteStrategy>
	                    </concreteStrategies>
	                </actors>
	                <comments>Ce strategy est groupé avec un state et un template methode. La difference est fait  selon les methodes utilisés.
	                    Le strategy utilise la methode updateconfig() et via update pour la class ConfigPanel </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	    <designPattern name="Template Method">
	        <microArchitectures>
	            <microArchitecture number="2222">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Brace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Gap</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode getType() est la primitive operation et getHighlightState() le TemplateMethod</comments>
	            </microArchitecture>
	            <microArchitecture number="2223">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleQuestion</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsCurly</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionBracelsParenOrBracket</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineEmpty</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWith</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionCurrLineStartsWithSkipComments</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionExistCharInStmt</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionHasCharPrecedingOpenBrace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionInsideComment</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionLineContains</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionNewParenPhrase</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsComment</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionPrevLineStartsWith</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartAfterOpenBrace</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.QuestionStartingNewStmt</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode applyRule(DefinitionsDocument doc) est la primitive operation et indentLine() le TemplateMethod. Le design pattern strategy (2070) est connecté à ce template method</comments>
	            </microArchitecture>
	            <microArchitecture number="2224">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.IndentRuleAction</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionBracePlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionDoNothing</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStarCurrStmtPlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevLinePlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartPrevStmtPlus</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.indent.ActionStartStmtOfBracePlus</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode indentLine(DefinitionsDocument doc) est la primitive operation et indentLine(DefinitionsDocument doc, int pos) le TemplateMethod. Le design pattern strategy (2080) est connecté à ce template method</comments>
	            </microArchitecture>
	            <microArchitecture number="2225">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.model.debug.DocumentDebugAction</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.model.definitions.reducedmodel.Breakpoint</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode _createRequest(ReferenceType ref)) est la primitive operation et createRequest(ReferenceType rt) le TemplateMethod</comments>
	            </microArchitecture>
	            <microArchitecture number="2226">
	                <actors>
	                    <abstractClass>
	                        <abstractClass roleKind="AbstractClass">
	                            <entity>edu.rice.cs.drjava.ui.config.OptionComponent</entity>
	                        </abstractClass>
	                    </abstractClass>
	                    <concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.BooleanOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ColorOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FileOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.FontOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.IntegerOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.KeyStrokeOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.LabelComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.StringOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.ToolbarOptionComponent</entity>
	                        </concreteClass>
	                        <concreteClass roleKind="Class">
	                            <entity>edu.rice.cs.drjava.ui.config.VectorOptionComponent</entity>
	                        </concreteClass>
	                    </concreteClass>
	                </actors>
	                <comments>La méthode setValue(T value) est la primitive operation et setValue(T value) et/ou resetToCurrent() est le TemplateMethod. Il y a un strategy (2071) et un state (2079) autour. </comments>
	            </microArchitecture>
	            <microArchitecture number="2080">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>  edu.rice.cs.util.newjvm.AbstractSlaveJVM
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.util.newjvm.SlaveRemote
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments> 1e template pour former un Bridge
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2090">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>  edu.rice.cs.util.newjvm.AbstractMasterJVM
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.util.newjvm.MasterRemote
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments> 2e template pour former un Bridge
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2100">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>   edu.rice.cs.drjava.model.definitions.reducedmodel.AbstractReducedModel
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelBrace
	                            </entity>
	                        </ConcreteClass>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedModelComment
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments>  Brace et Comment fonctionne en parallelle, 
	                			TemplateMethode : insertGapBetweenMultiCharBrace()
	                			primitive 1 : public void insertChar(char ch) 
	                			primitive 2	: public void insertNewline() 
	                			etc...
	                			Note : la representation fait par discribe n'est pas complete.
	                </comments>
	            </microArchitecture>
	            <microArchitecture number="2110">
	                <actors>
	                    <AbstractClassS>
	                        <AbstractClass roleKind="AbstractClass">
	                            <entity>   edu.rice.cs.drjava.model.definitions.reducedmodel.ReducedToken
	                            </entity>
	                        </AbstractClass>
	                    </AbstractClassS>
	                    <ConcreteClassS>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.Gap
	                            </entity>
	                        </ConcreteClass>
	                        <ConcreteClass roleKind="Class">
	                            <entity> edu.rice.cs.drjava.model.definitions.reducedmodel.Brace 
	                            </entity>
	                        </ConcreteClass>
	                    </ConcreteClassS>
	                </actors>
	                <comments>   TemplateMethode:  getHighlightState()
								 Primitive : gettype()
	                </comments>
	            </microArchitecture>
	        </microArchitectures>
	    </designPattern>
	</program>

	<!--
	<program type="LANGUAGE">
		<name>NAME</name>
		<designPattern name="NAME">
			<microArchitectures>
				<microArchitecture number="NUMBER">
					<roles>
						<ROLES1>
							<ROLE1 roleKind="Class|AbstractClass"><entity></entity></ROLE1>
						</ROLES1>
						<ROLES2>
							<ROLE2 roleKind="Class|AbstractClass"><entity></entity></ROLE2>
						</ROLES2>
					</roles>
				</microArchitecture>
			</microArchitectures>
		</designPattern>
	</program>
	-->
</designPatterns>